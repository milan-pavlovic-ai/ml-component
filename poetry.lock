[[package]]
name = "absl-py"
version = "2.1.0"
description = "Abseil Python Common Libraries, see https://github.com/abseil/abseil-py."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "accelerate"
version = "0.21.0"
description = "Accelerate"
category = "main"
optional = false
python-versions = ">=3.8.0"

[package.dependencies]
numpy = ">=1.17"
packaging = ">=20.0"
psutil = "*"
pyyaml = "*"
torch = ">=1.10.0"

[package.extras]
dev = ["black (>=23.1,<24.0)", "ruff (>=0.0.241)", "hf-doc-builder (>=0.3.0)", "urllib3 (<2.0.0)", "pytest", "pytest-xdist", "pytest-subtests", "parameterized", "datasets", "evaluate", "transformers", "scipy", "scikit-learn", "deepspeed", "tqdm", "rich"]
quality = ["black (>=23.1,<24.0)", "ruff (>=0.0.241)", "hf-doc-builder (>=0.3.0)", "urllib3 (<2.0.0)"]
rich = ["rich"]
sagemaker = ["sagemaker"]
test_dev = ["datasets", "evaluate", "transformers", "scipy", "scikit-learn", "deepspeed", "tqdm"]
test_prod = ["pytest", "pytest-xdist", "pytest-subtests", "parameterized"]
test_trackers = ["wandb", "comet-ml", "tensorboard"]
testing = ["pytest", "pytest-xdist", "pytest-subtests", "parameterized", "datasets", "evaluate", "transformers", "scipy", "scikit-learn", "deepspeed", "tqdm"]

[[package]]
name = "aiohappyeyeballs"
version = "2.4.0"
description = "Happy Eyeballs for asyncio"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "aiohttp"
version = "3.10.5"
description = "Async http client/server framework (asyncio)"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
aiohappyeyeballs = ">=2.3.0"
aiosignal = ">=1.1.2"
async-timeout = {version = ">=4.0,<5.0", markers = "python_version < \"3.11\""}
attrs = ">=17.3.0"
frozenlist = ">=1.1.1"
multidict = ">=4.5,<7.0"
yarl = ">=1.0,<2.0"

[package.extras]
speedups = ["brotlicffi", "brotli", "aiodns (>=3.2.0)"]

[[package]]
name = "aiohttp-cors"
version = "0.7.0"
description = "CORS support for aiohttp"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
aiohttp = ">=1.1"

[[package]]
name = "aiosignal"
version = "1.3.1"
description = "aiosignal: a list of registered asynchronous callbacks"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
frozenlist = ">=1.1.0"

[[package]]
name = "annotated-types"
version = "0.7.0"
description = "Reusable constraint types to use with typing.Annotated"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "antlr4-python3-runtime"
version = "4.9.3"
description = "ANTLR 4.9.3 runtime for Python 3.7"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "anyio"
version = "4.4.0"
description = "High level compatibility layer for multiple asynchronous event loop implementations"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
exceptiongroup = {version = ">=1.0.2", markers = "python_version < \"3.11\""}
idna = ">=2.8"
sniffio = ">=1.1"
typing-extensions = {version = ">=4.1", markers = "python_version < \"3.11\""}

[package.extras]
doc = ["packaging", "Sphinx (>=7)", "sphinx-rtd-theme", "sphinx-autodoc-typehints (>=1.2.0)"]
test = ["anyio", "coverage[toml] (>=7)", "exceptiongroup (>=1.2.0)", "hypothesis (>=4.0)", "psutil (>=5.9)", "pytest (>=7.0)", "pytest-mock (>=3.6.1)", "trustme", "uvloop (>=0.17)"]
trio = ["trio (>=0.23)"]

[[package]]
name = "appnope"
version = "0.1.4"
description = "Disable App Nap on macOS >= 10.9"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "asttokens"
version = "2.4.1"
description = "Annotate AST trees with source code positions"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.12.0"

[package.extras]
astroid = ["astroid (>=1,<2)", "astroid (>=2,<4)"]
test = ["pytest", "astroid (>=1,<2)", "astroid (>=2,<4)"]

[[package]]
name = "async-timeout"
version = "4.0.3"
description = "Timeout context manager for asyncio programs"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "attrs"
version = "24.2.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
benchmark = ["cloudpickle", "hypothesis", "mypy (>=1.11.1)", "pympler", "pytest-codspeed", "pytest-mypy-plugins", "pytest-xdist", "pytest (>=4.3.0)"]
cov = ["cloudpickle", "coverage[toml] (>=5.3)", "hypothesis", "mypy (>=1.11.1)", "pympler", "pytest-mypy-plugins", "pytest-xdist", "pytest (>=4.3.0)"]
dev = ["cloudpickle", "hypothesis", "mypy (>=1.11.1)", "pre-commit", "pympler", "pytest-mypy-plugins", "pytest-xdist", "pytest (>=4.3.0)"]
docs = ["cogapp", "furo", "myst-parser", "sphinx", "sphinx-notfound-page", "sphinxcontrib-towncrier", "towncrier (<24.7)"]
tests = ["cloudpickle", "hypothesis", "mypy (>=1.11.1)", "pympler", "pytest-mypy-plugins", "pytest-xdist", "pytest (>=4.3.0)"]
tests-mypy = ["mypy (>=1.11.1)", "pytest-mypy-plugins"]

[[package]]
name = "autogluon"
version = "1.1.1"
description = "Fast and Accurate ML in 3 Lines of Code"
category = "main"
optional = false
python-versions = "<3.12,>=3.8"

[package.dependencies]
"autogluon.core" = {version = "1.1.1", extras = ["all"]}
"autogluon.features" = "1.1.1"
"autogluon.multimodal" = "1.1.1"
"autogluon.tabular" = {version = "1.1.1", extras = ["all"]}
"autogluon.timeseries" = {version = "1.1.1", extras = ["all"]}

[[package]]
name = "autogluon.common"
version = "1.1.1"
description = "Fast and Accurate ML in 3 Lines of Code"
category = "main"
optional = false
python-versions = "<3.12,>=3.8"

[package.dependencies]
boto3 = ">=1.10,<2"
numpy = ">=1.21,<1.29"
pandas = ">=2.0.0,<2.3.0"
psutil = ">=5.7.3,<6"
tqdm = ">=4.38,<5"

[package.extras]
tests = ["types-requests", "types-setuptools", "pytest-mypy", "pytest"]

[[package]]
name = "autogluon.core"
version = "1.1.1"
description = "Fast and Accurate ML in 3 Lines of Code"
category = "main"
optional = false
python-versions = "<3.12,>=3.8"

[package.dependencies]
"autogluon.common" = "1.1.1"
boto3 = ">=1.10,<2"
hyperopt = {version = ">=0.2.7,<0.2.8", optional = true, markers = "extra == \"all\""}
matplotlib = "*"
networkx = ">=3.0,<4"
numpy = ">=1.21,<1.29"
pandas = ">=2.0.0,<2.3.0"
ray = {version = ">=2.10.0,<2.11", extras = ["default", "tune"], optional = true, markers = "extra == \"all\""}
requests = "*"
scikit-learn = ">=1.3.0,<1.4.1"
scipy = ">=1.5.4,<1.13"
tqdm = ">=4.38,<5"

[package.extras]
all = ["ray[default,tune] (>=2.10.0,<2.11)", "hyperopt (>=0.2.7,<0.2.8)", "ray[default] (>=2.10.0,<2.11)"]
ray = ["ray[default] (>=2.10.0,<2.11)"]
raytune = ["ray[default,tune] (>=2.10.0,<2.11)", "hyperopt (>=0.2.7,<0.2.8)"]
tests = ["types-setuptools", "types-requests", "pytest", "pytest-mypy"]

[[package]]
name = "autogluon.features"
version = "1.1.1"
description = "Fast and Accurate ML in 3 Lines of Code"
category = "main"
optional = false
python-versions = "<3.12,>=3.8"

[package.dependencies]
"autogluon.common" = "1.1.1"
numpy = ">=1.21,<1.29"
pandas = ">=2.0.0,<2.3.0"
scikit-learn = ">=1.3.0,<1.4.1"

[[package]]
name = "autogluon.multimodal"
version = "1.1.1"
description = "Fast and Accurate ML in 3 Lines of Code"
category = "main"
optional = false
python-versions = "<3.12,>=3.8"

[package.dependencies]
accelerate = ">=0.21.0,<0.22.0"
"autogluon.common" = "1.1.1"
"autogluon.core" = {version = "1.1.1", extras = ["raytune"]}
"autogluon.features" = "1.1.1"
boto3 = ">=1.10,<2"
defusedxml = ">=0.7.1,<0.7.2"
evaluate = ">=0.4.0,<0.5.0"
jinja2 = ">=3.0.3,<3.2"
jsonschema = ">=4.18,<4.22"
lightning = ">=2.2,<2.4"
nlpaug = ">=1.1.10,<1.2.0"
nltk = ">=3.4.5,<4.0.0"
nptyping = ">=1.4.4,<2.5.0"
numpy = ">=1.21,<1.29"
nvidia-ml-py3 = "7.352.0"
omegaconf = ">=2.1.1,<2.3.0"
openmim = ">=0.3.7,<0.4.0"
pandas = ">=2.0.0,<2.3.0"
pdf2image = ">=1.17.0,<1.19"
Pillow = ">=10.0.1,<11"
pytesseract = ">=0.3.9,<0.3.11"
pytorch-metric-learning = ">=1.3.0,<2.4"
requests = ">=2.21,<3"
scikit-image = ">=0.19.1,<0.21.0"
scikit-learn = ">=1.3.0,<1.4.1"
scipy = ">=1.5.4,<1.13"
seqeval = ">=1.2.2,<1.3.0"
tensorboard = ">=2.9,<3"
text-unidecode = ">=1.3,<1.4"
timm = ">=0.9.5,<0.10.0"
torch = ">=2.2,<2.4"
torchmetrics = ">=1.2.0,<1.3.0"
torchvision = ">=0.16.0,<0.19.0"
tqdm = ">=4.38,<5"
transformers = {version = ">=4.38.0,<4.41.0", extras = ["sentencepiece"]}

[package.extras]
tests = ["black (>=23.0,<24.0)", "isort (>=5.10)", "datasets (>=2.10.0,<2.15.0)", "onnx (>=1.13.0,<1.14.0)", "onnxruntime-gpu (>=1.15.0,<1.16.0)", "onnxruntime (>=1.15.0,<1.16.0)", "tensorrt (>=8.6.0,<8.6.2)"]

[[package]]
name = "autogluon.tabular"
version = "1.1.1"
description = "Fast and Accurate ML in 3 Lines of Code"
category = "main"
optional = false
python-versions = "<3.12,>=3.8"

[package.dependencies]
"autogluon.core" = "1.1.1"
"autogluon.features" = "1.1.1"
catboost = [
    {version = ">=1.1,<1.3", optional = true, markers = "sys_platform != \"darwin\" or sys_platform != \"darwin\" and extra == \"all\""},
    {version = ">=1.1,<1.2", optional = true, markers = "sys_platform == \"darwin\" and python_version < \"3.11\" or sys_platform == \"darwin\" and python_version < \"3.11\" and extra == \"catboost\""},
]
fastai = {version = ">=2.3.1,<2.8", optional = true, markers = "extra == \"all\""}
lightgbm = {version = ">=3.3,<4.4", optional = true, markers = "extra == \"all\""}
networkx = ">=3.0,<4"
numpy = ">=1.21,<1.29"
pandas = ">=2.0.0,<2.3.0"
scikit-learn = ">=1.3.0,<1.4.1"
scipy = ">=1.5.4,<1.13"
torch = {version = ">=2.2,<2.4", optional = true, markers = "extra == \"all\""}
xgboost = {version = ">=1.6,<2.1", optional = true, markers = "extra == \"all\""}

[package.extras]
all = ["xgboost (>=1.6,<2.1)", "autogluon.core[all] (==1.1.1)", "fastai (>=2.3.1,<2.8)", "torch (>=2.2,<2.4)", "lightgbm (>=3.3,<4.4)", "catboost (>=1.1,<1.3)", "catboost (>=1.1,<1.2)"]
catboost = ["catboost (>=1.1,<1.3)", "catboost (>=1.1,<1.2)"]
fastai = ["torch (>=2.2,<2.4)", "fastai (>=2.3.1,<2.8)"]
imodels = ["imodels (>=1.3.10,<1.4.0)"]
lightgbm = ["lightgbm (>=3.3,<4.4)"]
ray = ["autogluon.core[all] (==1.1.1)"]
skex = ["scikit-learn-intelex (>=2023.0,<2024.5)"]
skl2onnx = ["skl2onnx (>=1.15.0,<1.17.0)", "onnxruntime-gpu (>=1.15.0,<1.18.0)"]
tabpfn = ["tabpfn (>=0.1,<0.2)"]
tests = ["tabpfn (>=0.1,<0.2)", "imodels (>=1.3.10,<1.4.0)", "skl2onnx (>=1.15.0,<1.17.0)", "onnxruntime-gpu (>=1.15.0,<1.18.0)", "vowpalwabbit (>=9,<9.10)"]
vowpalwabbit = ["vowpalwabbit (>=9,<9.10)"]
xgboost = ["xgboost (>=1.6,<2.1)"]

[[package]]
name = "autogluon.timeseries"
version = "1.1.1"
description = "Fast and Accurate ML in 3 Lines of Code"
category = "main"
optional = false
python-versions = "<3.12,>=3.8"

[package.dependencies]
accelerate = ">=0.21.0,<0.22.0"
"autogluon.common" = "1.1.1"
"autogluon.core" = {version = "1.1.1", extras = ["raytune"]}
"autogluon.tabular" = {version = "1.1.1", extras = ["catboost", "lightgbm", "xgboost"]}
gluonts = "0.15.1"
joblib = ">=1.1,<2"
lightning = ">=2.2,<2.4"
mlforecast = ">=0.10.0,<0.10.1"
networkx = ">=3.0,<4"
numpy = ">=1.21,<1.29"
optimum = {version = ">=1.17,<1.19", extras = ["onnxruntime"], optional = true, markers = "extra == \"all\""}
orjson = ">=3.9,<4.0"
pandas = ">=2.0.0,<2.3.0"
pytorch-lightning = ">=2.2,<2.4"
scipy = ">=1.5.4,<1.13"
statsforecast = ">=1.4.0,<1.5"
tensorboard = ">=2.9,<3"
torch = ">=2.2,<2.4"
tqdm = ">=4.38,<5"
transformers = {version = ">=4.38.0,<4.41.0", extras = ["sentencepiece"]}
utilsforecast = ">=0.0.10,<0.0.11"

[package.extras]
all = ["optimum[onnxruntime] (>=1.17,<1.19)"]
chronos-onnx = ["optimum[onnxruntime] (>=1.17,<1.19)"]
chronos-openvino = ["optimum-intel[openvino,nncf] (>=1.15,<1.17)", "optimum[openvino,nncf] (>=1.17,<1.19)"]
tests = ["pytest", "ruff (>=0.0.285)", "flaky (>=3.7,<4)", "pytest-timeout (>=2.1,<3)", "isort (>=5.10)", "black (>=23.0,<24.0)"]

[[package]]
name = "beautifulsoup4"
version = "4.12.3"
description = "Screen-scraping library"
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.dependencies]
soupsieve = ">1.2"

[package.extras]
cchardet = ["cchardet"]
chardet = ["chardet"]
charset-normalizer = ["charset-normalizer"]
html5lib = ["html5lib"]
lxml = ["lxml"]

[[package]]
name = "blis"
version = "0.7.11"
description = "The Blis BLAS-like linear algebra library, as a self-contained C-extension."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = {version = ">=1.19.0", markers = "python_version >= \"3.9\""}

[[package]]
name = "boto3"
version = "1.35.5"
description = "The AWS SDK for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
botocore = ">=1.35.5,<1.36.0"
jmespath = ">=0.7.1,<2.0.0"
s3transfer = ">=0.10.0,<0.11.0"

[package.extras]
crt = ["botocore[crt] (>=1.21.0,<2.0a0)"]

[[package]]
name = "botocore"
version = "1.35.5"
description = "Low-level, data-driven core of boto 3."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
jmespath = ">=0.7.1,<2.0.0"
python-dateutil = ">=2.1,<3.0.0"
urllib3 = [
    {version = ">=1.25.4,<1.27", markers = "python_version < \"3.10\""},
    {version = ">=1.25.4,<2.2.0 || >2.2.0,<3", markers = "python_version >= \"3.10\""},
]

[package.extras]
crt = ["awscrt (==0.21.2)"]

[[package]]
name = "cachetools"
version = "5.5.0"
description = "Extensible memoizing collections and decorators"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "catalogue"
version = "2.0.10"
description = "Super lightweight function registries for your library"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "catboost"
version = "1.1.1"
description = "Catboost Python Package"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
graphviz = "*"
matplotlib = "*"
numpy = ">=1.16.0"
pandas = ">=0.24.0"
plotly = "*"
scipy = "*"
six = "*"

[[package]]
name = "catboost"
version = "1.2.5"
description = "CatBoost Python Package"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
graphviz = "*"
matplotlib = "*"
numpy = ">=1.16.0"
pandas = ">=0.24"
plotly = "*"
scipy = "*"
six = "*"

[package.extras]
widget = ["traitlets", "ipython", "ipywidgets (>=7.0,<9.0)"]

[[package]]
name = "certifi"
version = "2024.7.4"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cffi"
version = "1.17.0"
description = "Foreign Function Interface for Python calling C code."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pycparser = "*"

[[package]]
name = "charset-normalizer"
version = "3.3.2"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.7.0"

[[package]]
name = "click"
version = "8.1.7"
description = "Composable command line interface toolkit"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "cloudpathlib"
version = "0.18.1"
description = "pathlib-style classes for cloud storage services."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
typing_extensions = {version = ">4", markers = "python_version < \"3.11\""}

[package.extras]
all = ["cloudpathlib", "cloudpathlib", "cloudpathlib"]
azure = ["azure-storage-blob (>=12)"]
gs = ["google-cloud-storage"]
s3 = ["boto3"]

[[package]]
name = "cloudpickle"
version = "3.0.0"
description = "Pickler class to extend the standard pickle.Pickler functionality"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "coloredlogs"
version = "15.0.1"
description = "Colored terminal output for Python's logging module"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
humanfriendly = ">=9.1"

[package.extras]
cron = ["capturer (>=2.4)"]

[[package]]
name = "colorful"
version = "0.5.6"
description = "Terminal string styling done right, in Python."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "comm"
version = "0.2.2"
description = "Jupyter Python Comm implementation, for usage in ipykernel, xeus-python etc."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
traitlets = ">=4"

[package.extras]
test = ["pytest"]

[[package]]
name = "confection"
version = "0.1.5"
description = "The sweetest config system for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pydantic = ">=1.7.4,<1.8 || >1.8,<1.8.1 || >1.8.1,<3.0.0"
srsly = ">=2.4.0,<3.0.0"

[[package]]
name = "contourpy"
version = "1.2.1"
description = "Python library for calculating contours of 2D quadrilateral grids"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
numpy = ">=1.20"

[package.extras]
docs = ["furo", "sphinx (>=7.2)", "sphinx-copybutton"]
bokeh = ["bokeh", "selenium"]
mypy = ["contourpy", "docutils-stubs", "mypy (==1.8.0)", "types-pillow"]
test = ["contourpy", "matplotlib", "pillow"]
test-no-images = ["pytest", "pytest-cov", "pytest-xdist", "wurlitzer"]

[[package]]
name = "cycler"
version = "0.12.1"
description = "Composable style cycles"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["ipython", "matplotlib", "numpydoc", "sphinx"]
tests = ["pytest", "pytest-cov", "pytest-xdist"]

[[package]]
name = "cymem"
version = "2.0.8"
description = "Manage calls to calloc/free through Cython"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "datasets"
version = "2.21.0"
description = "HuggingFace community-driven open-source library of datasets"
category = "main"
optional = false
python-versions = ">=3.8.0"

[package.dependencies]
aiohttp = "*"
dill = ">=0.3.0,<0.3.9"
filelock = "*"
fsspec = {version = ">=2023.1.0,<=2024.6.1", extras = ["http"]}
huggingface-hub = ">=0.21.2"
multiprocess = "*"
numpy = ">=1.17"
packaging = "*"
pandas = "*"
pyarrow = ">=15.0.0"
pyyaml = ">=5.1"
requests = ">=2.32.2"
tqdm = ">=4.66.3"
xxhash = "*"

[package.extras]
apache-beam = ["apache-beam (>=2.26.0)"]
audio = ["soundfile (>=0.12.1)", "librosa", "soxr (>=0.4.0)"]
benchmarks = ["tensorflow (==2.12.0)", "torch (==2.0.1)", "transformers (==4.30.1)"]
dev = ["absl-py", "decorator", "joblib (<1.3.0)", "joblibspark", "pytest", "pytest-datadir", "pytest-xdist", "elasticsearch (<8.0.0)", "faiss-cpu (>=1.8.0.post1)", "lz4", "moto", "pyspark (>=3.4)", "py7zr", "rarfile (>=4.0)", "sqlalchemy", "s3fs (>=2021.11.1)", "protobuf (<4.0.0)", "tiktoken", "torch (>=2.0.0)", "soundfile (>=0.12.1)", "transformers (>=4.42.0)", "typing-extensions (>=4.6.1)", "zstandard", "polars[timezone] (>=0.20.0)", "Pillow (>=9.4.0)", "librosa", "ruff (>=0.3.0)", "s3fs", "transformers", "torch", "tensorflow (>=2.6.0)", "tensorflow (>=2.6.0)", "tensorflow (>=2.16.0)", "soxr (>=0.4.0)", "jax (>=0.3.14)", "jaxlib (>=0.3.14)"]
docs = ["s3fs", "transformers", "torch", "tensorflow (>=2.6.0)"]
jax = ["jax (>=0.3.14)", "jaxlib (>=0.3.14)"]
metrics-tests = ["accelerate", "bert-score (>=0.3.6)", "jiwer", "langdetect", "mauve-text", "nltk (<3.8.2)", "rouge-score", "sacrebleu", "sacremoses", "scikit-learn", "scipy", "sentencepiece", "seqeval", "spacy (>=3.0.0)", "tldextract", "toml (>=0.10.1)", "typer (<0.5.0)", "requests-file (>=1.5.1)", "tldextract (>=3.1.0)", "texttable (>=1.6.3)", "Werkzeug (>=1.0.1)", "six (>=1.15.0,<1.16.0)"]
quality = ["ruff (>=0.3.0)"]
s3 = ["s3fs"]
tensorflow = ["tensorflow (>=2.6.0)"]
tensorflow-gpu = ["tensorflow (>=2.6.0)"]
tests = ["absl-py", "decorator", "joblib (<1.3.0)", "joblibspark", "pytest", "pytest-datadir", "pytest-xdist", "elasticsearch (<8.0.0)", "faiss-cpu (>=1.8.0.post1)", "lz4", "moto", "pyspark (>=3.4)", "py7zr", "rarfile (>=4.0)", "sqlalchemy", "s3fs (>=2021.11.1)", "protobuf (<4.0.0)", "tiktoken", "torch (>=2.0.0)", "soundfile (>=0.12.1)", "transformers (>=4.42.0)", "typing-extensions (>=4.6.1)", "zstandard", "polars[timezone] (>=0.20.0)", "Pillow (>=9.4.0)", "librosa", "tensorflow (>=2.6.0)", "tensorflow (>=2.16.0)", "soxr (>=0.4.0)", "jax (>=0.3.14)", "jaxlib (>=0.3.14)"]
tests-numpy2 = ["absl-py", "decorator", "joblib (<1.3.0)", "joblibspark", "pytest", "pytest-datadir", "pytest-xdist", "elasticsearch (<8.0.0)", "lz4", "moto", "pyspark (>=3.4)", "py7zr", "rarfile (>=4.0)", "sqlalchemy", "s3fs (>=2021.11.1)", "protobuf (<4.0.0)", "tiktoken", "torch (>=2.0.0)", "soundfile (>=0.12.1)", "typing-extensions (>=4.6.1)", "zstandard", "polars[timezone] (>=0.20.0)", "Pillow (>=9.4.0)", "librosa"]
tests_numpy2 = ["soxr (>=0.4.0)", "jax (>=0.3.14)", "jaxlib (>=0.3.14)"]
torch = ["torch"]
vision = ["Pillow (>=9.4.0)"]

[[package]]
name = "debugpy"
version = "1.8.5"
description = "An implementation of the Debug Adapter Protocol for Python"
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "decorator"
version = "5.1.1"
description = "Decorators for Humans"
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "defusedxml"
version = "0.7.1"
description = "XML bomb protection for Python stdlib modules"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "dill"
version = "0.3.8"
description = "serialize all of Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
graph = ["objgraph (>=1.7.2)"]
profile = ["gprof2dot (>=2022.7.29)"]

[[package]]
name = "distlib"
version = "0.3.8"
description = "Distribution utilities"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "evaluate"
version = "0.4.2"
description = "HuggingFace community-driven open-source library of evaluation"
category = "main"
optional = false
python-versions = ">=3.8.0"

[package.dependencies]
datasets = ">=2.0.0"
dill = "*"
fsspec = {version = ">=2021.05.0", extras = ["http"]}
huggingface-hub = ">=0.7.0"
multiprocess = "*"
numpy = ">=1.17"
packaging = "*"
pandas = "*"
requests = ">=2.19.0"
tqdm = ">=4.62.1"
xxhash = "*"

[package.extras]
dev = ["absl-py", "charcut (>=1.1.1)", "cer (>=1.2.0)", "nltk", "pytest", "pytest-datadir", "pytest-xdist", "tensorflow (>=2.3,!=2.6.0,!=2.6.1,<=2.10)", "torch", "accelerate", "bert-score (>=0.3.6)", "rouge-score (>=0.1.2)", "sacrebleu", "sacremoses", "scipy (>=1.10.0)", "seqeval", "scikit-learn", "jiwer", "sentencepiece", "transformers", "mauve-text", "trectools", "toml (>=0.10.1)", "requests-file (>=1.5.1)", "tldextract (>=3.1.0)", "texttable (>=1.6.3)", "unidecode (>=1.3.4)", "Werkzeug (>=1.0.1)", "six (>=1.15.0,<1.16.0)", "black (>=22.0,<23.0)", "flake8 (>=3.8.3)", "isort (>=5.0.0)", "pyyaml (>=5.3.1)"]
docs = ["s3fs"]
evaluator = ["transformers", "scipy (>=1.7.1)"]
quality = ["black (>=22.0,<23.0)", "flake8 (>=3.8.3)", "isort (>=5.0.0)", "pyyaml (>=5.3.1)"]
template = ["cookiecutter", "gradio (>=3.0.0)"]
tensorflow = ["tensorflow (>=2.2.0,!=2.6.0,!=2.6.1)"]
tensorflow-gpu = ["tensorflow-gpu (>=2.2.0,!=2.6.0,!=2.6.1)"]
tests = ["absl-py", "charcut (>=1.1.1)", "cer (>=1.2.0)", "nltk", "pytest", "pytest-datadir", "pytest-xdist", "tensorflow (>=2.3,!=2.6.0,!=2.6.1,<=2.10)", "torch", "accelerate", "bert-score (>=0.3.6)", "rouge-score (>=0.1.2)", "sacrebleu", "sacremoses", "scipy (>=1.10.0)", "seqeval", "scikit-learn", "jiwer", "sentencepiece", "transformers", "mauve-text", "trectools", "toml (>=0.10.1)", "requests-file (>=1.5.1)", "tldextract (>=3.1.0)", "texttable (>=1.6.3)", "unidecode (>=1.3.4)", "Werkzeug (>=1.0.1)", "six (>=1.15.0,<1.16.0)"]
torch = ["torch"]

[[package]]
name = "exceptiongroup"
version = "1.2.2"
description = "Backport of PEP 654 (exception groups)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest (>=6)"]

[[package]]
name = "executing"
version = "2.1.0"
description = "Get the currently executing AST node of a frame, and other information"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.extras]
tests = ["asttokens (>=2.1.0)", "ipython", "pytest", "coverage", "coverage-enable-subprocess", "littleutils", "rich"]

[[package]]
name = "fastai"
version = "2.7.17"
description = "fastai simplifies training fast and accurate neural nets using modern best practices"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
fastcore = ">=1.5.29,<1.8"
fastdownload = ">=0.0.5,<2"
fastprogress = ">=0.2.4"
matplotlib = "*"
packaging = "*"
pandas = "*"
pillow = ">=9.0.0"
pyyaml = "*"
requests = "*"
scikit-learn = "*"
scipy = "*"
spacy = "<4"
torch = ">=1.10,<2.5"
torchvision = ">=0.11"

[package.extras]
dev = ["ipywidgets", "lightning", "pytorch-ignite", "transformers", "sentencepiece", "tensorboard", "pydicom", "catalyst", "flask-compress", "captum (>=0.4.1)", "flask", "wandb", "kornia", "scikit-image", "comet-ml", "albumentations", "opencv-python", "pyarrow", "ninja", "timm (>=0.9)", "accelerate (>=0.21)", "ipykernel"]

[[package]]
name = "fastapi"
version = "0.112.2"
description = "FastAPI framework, high performance, easy to learn, fast to code, ready for production"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pydantic = ">=1.7.4,<1.8 || >1.8,<1.8.1 || >1.8.1,<2.0.0 || >2.0.0,<2.0.1 || >2.0.1,<2.1.0 || >2.1.0,<3.0.0"
starlette = ">=0.37.2,<0.39.0"
typing-extensions = ">=4.8.0"

[package.extras]
standard = ["fastapi-cli[standard] (>=0.0.5)", "httpx (>=0.23.0)", "jinja2 (>=2.11.2)", "python-multipart (>=0.0.7)", "email-validator (>=2.0.0)", "uvicorn[standard] (>=0.12.0)"]
all = ["fastapi-cli[standard] (>=0.0.5)", "httpx (>=0.23.0)", "jinja2 (>=2.11.2)", "python-multipart (>=0.0.7)", "itsdangerous (>=1.1.0)", "pyyaml (>=5.3.1)", "ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0)", "orjson (>=3.2.1)", "email-validator (>=2.0.0)", "uvicorn[standard] (>=0.12.0)", "pydantic-settings (>=2.0.0)", "pydantic-extra-types (>=2.0.0)"]

[[package]]
name = "fastcore"
version = "1.7.1"
description = "Python supercharged for fastai development"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
packaging = "*"

[package.extras]
dev = ["numpy", "nbdev (>=0.2.39)", "matplotlib", "pillow", "torch", "pandas", "nbclassic"]

[[package]]
name = "fastdownload"
version = "0.0.7"
description = "A general purpose data downloading library."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
fastcore = ">=1.3.26"
fastprogress = "*"

[[package]]
name = "fastprogress"
version = "1.0.3"
description = "A nested progress with plotting options for fastai"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "filelock"
version = "3.15.4"
description = "A platform independent file lock."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["furo (>=2023.9.10)", "sphinx-autodoc-typehints (>=1.25.2)", "sphinx (>=7.2.6)"]
testing = ["covdefaults (>=2.3)", "coverage (>=7.3.2)", "diff-cover (>=8.0.1)", "pytest-asyncio (>=0.21)", "pytest-cov (>=4.1)", "pytest-mock (>=3.12)", "pytest-timeout (>=2.2)", "pytest (>=7.4.3)", "virtualenv (>=20.26.2)"]
typing = ["typing-extensions (>=4.8)"]

[[package]]
name = "flatbuffers"
version = "24.3.25"
description = "The FlatBuffers serialization format for Python"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "fonttools"
version = "4.53.1"
description = "Tools to manipulate font files"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
all = ["fs (>=2.2.0,<3)", "lxml (>=4.0)", "zopfli (>=0.1.4)", "lz4 (>=1.7.4.2)", "pycairo", "matplotlib", "sympy", "skia-pathops (>=0.5.0)", "uharfbuzz (>=0.23.0)", "brotlicffi (>=0.8.0)", "scipy", "brotli (>=1.0.1)", "munkres", "unicodedata2 (>=15.1.0)", "xattr"]
graphite = ["lz4 (>=1.7.4.2)"]
interpolatable = ["pycairo", "scipy", "munkres"]
lxml = ["lxml (>=4.0)"]
pathops = ["skia-pathops (>=0.5.0)"]
plot = ["matplotlib"]
repacker = ["uharfbuzz (>=0.23.0)"]
symfont = ["sympy"]
type1 = ["xattr"]
ufo = ["fs (>=2.2.0,<3)"]
unicode = ["unicodedata2 (>=15.1.0)"]
woff = ["zopfli (>=0.1.4)", "brotlicffi (>=0.8.0)", "brotli (>=1.0.1)"]

[[package]]
name = "frozenlist"
version = "1.4.1"
description = "A list-like structure which implements collections.abc.MutableSequence"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "fsspec"
version = "2024.6.1"
description = "File-system specification"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
aiohttp = {version = "<4.0.0a0 || >4.0.0a0,<4.0.0a1 || >4.0.0a1", optional = true, markers = "extra == \"http\""}

[package.extras]
abfs = ["adlfs"]
adl = ["adlfs"]
arrow = ["pyarrow (>=1)"]
dask = ["dask", "distributed"]
dev = ["pre-commit", "ruff"]
doc = ["numpydoc", "sphinx", "sphinx-design", "sphinx-rtd-theme", "yarl"]
dropbox = ["dropbox", "dropboxdrivefs", "requests"]
full = ["adlfs", "aiohttp (!=4.0.0a0,!=4.0.0a1)", "dask", "distributed", "dropbox", "dropboxdrivefs", "fusepy", "gcsfs", "libarchive-c", "ocifs", "panel", "paramiko", "pyarrow (>=1)", "pygit2", "requests", "s3fs", "smbprotocol", "tqdm"]
fuse = ["fusepy"]
gcs = ["gcsfs"]
git = ["pygit2"]
github = ["requests"]
gs = ["gcsfs"]
gui = ["panel"]
hdfs = ["pyarrow (>=1)"]
http = ["aiohttp (!=4.0.0a0,!=4.0.0a1)"]
libarchive = ["libarchive-c"]
oci = ["ocifs"]
s3 = ["s3fs"]
sftp = ["paramiko"]
smb = ["smbprotocol"]
ssh = ["paramiko"]
test = ["aiohttp (!=4.0.0a0,!=4.0.0a1)", "numpy", "pytest", "pytest-asyncio (!=0.22.0)", "pytest-benchmark", "pytest-cov", "pytest-mock", "pytest-recording", "pytest-rerunfailures", "requests"]
test-downstream = ["aiobotocore (>=2.5.4,<3.0.0)", "dask-expr", "dask", "moto[server] (>4,<5)", "pytest-timeout", "xarray"]
test-full = ["adlfs", "aiohttp (!=4.0.0a0,!=4.0.0a1)", "cloudpickle", "dask", "distributed", "dropbox", "dropboxdrivefs", "fastparquet", "fusepy", "gcsfs", "jinja2", "kerchunk", "libarchive-c", "lz4", "notebook", "numpy", "ocifs", "pandas", "panel", "paramiko", "pyarrow", "pyarrow (>=1)", "pyftpdlib", "pygit2", "pytest", "pytest-asyncio (!=0.22.0)", "pytest-benchmark", "pytest-cov", "pytest-mock", "pytest-recording", "pytest-rerunfailures", "python-snappy", "requests", "smbprotocol", "tqdm", "urllib3", "zarr", "zstandard"]
tqdm = ["tqdm"]

[[package]]
name = "future"
version = "1.0.0"
description = "Clean single-source support for Python 3 and 2"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "gdown"
version = "5.2.0"
description = "Google Drive Public File/Folder Downloader"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
beautifulsoup4 = "*"
filelock = "*"
requests = {version = "*", extras = ["socks"]}
tqdm = "*"

[package.extras]
test = ["build", "mypy", "pytest", "pytest-xdist", "ruff", "twine", "types-requests", "types-setuptools"]

[[package]]
name = "gluonts"
version = "0.15.1"
description = "Probabilistic time series modeling in Python."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.16,<2.0"
pandas = ">=1.0,<3"
pydantic = ">=1.7,<3"
toolz = ">=0.10,<1.0"
tqdm = ">=4.23,<5.0"
typing-extensions = ">=4.0,<5.0"

[package.extras]
prophet = ["prophet (>=1.0,<2.0)"]
r = ["rpy2 (>=3.5,<4.0)"]
arrow = ["pyarrow"]
dev = ["pyarrow", "ipython", "ipykernel (>=6.5,<7.0)", "nbconvert (>=6.5.1,<6.6.0)", "nbsphinx (>=0.8.8,<0.9.0)", "notedown", "lxml (>=5.1.0,<5.2.0)", "pytest-runner (>=2.11,<3.0)", "recommonmark", "sphinx (>=4.0,<5.0)", "docutils (<=0.16)", "optuna (>=2.10,<3.0)", "furo (==2022.6.4.1)", "m2r2", "myst-parser", "click", "orjson", "black", "holidays (>=0.9,<1.0)", "matplotlib (>=3.6,<4.0)", "pandas (>=1.1)", "pytest (>7.0)", "pytest-cov (>4.0,<5.0)", "pytest-timeout (>2.0,<3.0)", "pytest-xdist (>3.0,<4.0)", "pytest-rerunfailures (>=13.0,<14.0)", "ujson", "requests", "flask (>=2.0,<3.0)", "waitress (>=2.1.2,<2.2.0)", "sagemaker (>2.214.3,<3.0)", "s3fs (>=0.5,<1.0)", "fsspec (>=0.8,<0.9)", "s3fs (>=0.6,<1.0)"]
docs = ["ipython", "ipykernel (>=6.5,<7.0)", "nbconvert (>=6.5.1,<6.6.0)", "nbsphinx (>=0.8.8,<0.9.0)", "notedown", "lxml (>=5.1.0,<5.2.0)", "pytest-runner (>=2.11,<3.0)", "recommonmark", "sphinx (>=4.0,<5.0)", "docutils (<=0.16)", "optuna (>=2.10,<3.0)", "furo (==2022.6.4.1)", "m2r2", "myst-parser", "click", "orjson", "black", "holidays (>=0.9,<1.0)", "matplotlib (>=3.6,<4.0)"]
mxnet = ["numpy (<1.24)", "mxnet (>=1.7,<2.0)"]
pro = ["pyarrow", "orjson"]
shell = ["flask (>=2.0,<3.0)", "waitress (>=2.1.2,<2.2.0)"]
torch = ["torch (>=1.9,<3)", "lightning (>=2.0,<2.2)", "pytorch-lightning (>=2.0,<2.2)", "scipy (>=1.7.3,<1.8.0)", "scipy (>=1.10,<2.0)"]

[[package]]
name = "google-api-core"
version = "2.19.1"
description = "Google API client core library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-auth = ">=2.14.1,<3.0.dev0"
googleapis-common-protos = ">=1.56.2,<2.0.dev0"
proto-plus = ">=1.22.3,<2.0.0dev"
protobuf = ">=3.19.5,<3.20.0 || >3.20.0,<3.20.1 || >3.20.1,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<6.0.0.dev0"
requests = ">=2.18.0,<3.0.0.dev0"

[package.extras]
grpc = ["grpcio (>=1.33.2,<2.0dev)", "grpcio-status (>=1.33.2,<2.0.dev0)", "grpcio (>=1.49.1,<2.0dev)", "grpcio-status (>=1.49.1,<2.0.dev0)"]
grpcgcp = ["grpcio-gcp (>=0.2.2,<1.0.dev0)"]
grpcio-gcp = ["grpcio-gcp (>=0.2.2,<1.0.dev0)"]

[[package]]
name = "google-auth"
version = "2.34.0"
description = "Google Authentication Library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cachetools = ">=2.0.0,<6.0"
pyasn1-modules = ">=0.2.1"
rsa = ">=3.1.4,<5"

[package.extras]
aiohttp = ["aiohttp (>=3.6.2,<4.0.0.dev0)", "requests (>=2.20.0,<3.0.0.dev0)"]
enterprise-cert = ["cryptography", "pyopenssl"]
pyopenssl = ["pyopenssl (>=20.0.0)", "cryptography (>=38.0.3)"]
reauth = ["pyu2f (>=0.1.5)"]
requests = ["requests (>=2.20.0,<3.0.0.dev0)"]

[[package]]
name = "googleapis-common-protos"
version = "1.64.0"
description = "Common protobufs used in Google APIs"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
protobuf = ">=3.20.2,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<6.0.0.dev0"

[package.extras]
grpc = ["grpcio (>=1.44.0,<2.0.0.dev0)"]

[[package]]
name = "graphviz"
version = "0.20.3"
description = "Simple Python interface for Graphviz"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
dev = ["tox (>=3)", "flake8", "pep8-naming", "wheel", "twine"]
docs = ["sphinx (>=5,<7)", "sphinx-autodoc-typehints", "sphinx-rtd-theme"]
test = ["pytest (>=7,<8.1)", "pytest-mock (>=3)", "pytest-cov", "coverage"]

[[package]]
name = "grpcio"
version = "1.66.0"
description = "HTTP/2-based RPC framework"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
protobuf = ["grpcio-tools (>=1.66.0)"]

[[package]]
name = "h11"
version = "0.14.0"
description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "huggingface-hub"
version = "0.24.6"
description = "Client library to download and publish models, datasets and other repos on the huggingface.co hub"
category = "main"
optional = false
python-versions = ">=3.8.0"

[package.dependencies]
filelock = "*"
fsspec = ">=2023.5.0"
packaging = ">=20.9"
pyyaml = ">=5.1"
requests = "*"
tqdm = ">=4.42.1"
typing-extensions = ">=3.7.4.3"

[package.extras]
all = ["InquirerPy (==0.3.4)", "aiohttp", "minijinja (>=1.0)", "jedi", "jinja2", "pytest (>=8.1.1,<8.2.2)", "pytest-cov", "pytest-env", "pytest-xdist", "pytest-vcr", "pytest-asyncio", "pytest-rerunfailures", "pytest-mock", "urllib3 (<2.0)", "soundfile", "pillow", "gradio", "numpy", "fastapi", "ruff (>=0.5.0)", "mypy (==1.5.1)", "typing-extensions (>=4.8.0)", "types-pyyaml", "types-requests", "types-simplejson", "types-toml", "types-tqdm", "types-urllib3"]
cli = ["InquirerPy (==0.3.4)"]
dev = ["InquirerPy (==0.3.4)", "aiohttp", "minijinja (>=1.0)", "jedi", "jinja2", "pytest (>=8.1.1,<8.2.2)", "pytest-cov", "pytest-env", "pytest-xdist", "pytest-vcr", "pytest-asyncio", "pytest-rerunfailures", "pytest-mock", "urllib3 (<2.0)", "soundfile", "pillow", "gradio", "numpy", "fastapi", "ruff (>=0.5.0)", "mypy (==1.5.1)", "typing-extensions (>=4.8.0)", "types-pyyaml", "types-requests", "types-simplejson", "types-toml", "types-tqdm", "types-urllib3"]
fastai = ["toml", "fastai (>=2.4)", "fastcore (>=1.3.27)"]
hf-transfer = ["hf-transfer (>=0.1.4)"]
inference = ["aiohttp", "minijinja (>=1.0)"]
quality = ["ruff (>=0.5.0)", "mypy (==1.5.1)"]
tensorflow = ["tensorflow", "pydot", "graphviz"]
tensorflow-testing = ["tensorflow", "keras (<3.0)"]
testing = ["InquirerPy (==0.3.4)", "aiohttp", "minijinja (>=1.0)", "jedi", "jinja2", "pytest (>=8.1.1,<8.2.2)", "pytest-cov", "pytest-env", "pytest-xdist", "pytest-vcr", "pytest-asyncio", "pytest-rerunfailures", "pytest-mock", "urllib3 (<2.0)", "soundfile", "pillow", "gradio", "numpy", "fastapi"]
torch = ["torch", "safetensors"]
typing = ["typing-extensions (>=4.8.0)", "types-pyyaml", "types-requests", "types-simplejson", "types-toml", "types-tqdm", "types-urllib3"]

[[package]]
name = "humanfriendly"
version = "10.0"
description = "Human friendly output for text interfaces using Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
pyreadline3 = {version = "*", markers = "sys_platform == \"win32\" and python_version >= \"3.8\""}

[[package]]
name = "hyperopt"
version = "0.2.7"
description = "Distributed Asynchronous Hyperparameter Optimization"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
cloudpickle = "*"
future = "*"
networkx = ">=2.2"
numpy = "*"
py4j = "*"
scipy = "*"
six = "*"
tqdm = "*"

[package.extras]
atpe = ["lightgbm", "scikit-learn"]
mongotrials = ["pymongo"]
sparktrials = ["pyspark"]
dev = ["black", "pre-commit", "nose", "pytest"]

[[package]]
name = "idna"
version = "3.8"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "imageio"
version = "2.35.1"
description = "Library for reading and writing a wide range of image, video, scientific, and volumetric data formats."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = "*"
pillow = ">=8.3.2"

[package.extras]
all-plugins = ["astropy", "av", "imageio-ffmpeg", "psutil", "tifffile"]
all-plugins-pypy = ["av", "imageio-ffmpeg", "psutil", "tifffile"]
build = ["wheel"]
dev = ["pytest", "pytest-cov", "fsspec", "black", "flake8"]
docs = ["sphinx (<6)", "numpydoc", "pydata-sphinx-theme"]
ffmpeg = ["imageio-ffmpeg", "psutil"]
fits = ["astropy"]
full = ["astropy", "av", "black", "flake8", "fsspec", "gdal", "imageio-ffmpeg", "itk", "numpy (>2)", "numpydoc", "pillow-heif", "psutil", "pydata-sphinx-theme", "pytest", "pytest-cov", "rawpy", "sphinx (<6)", "tifffile", "wheel"]
gdal = ["gdal"]
itk = ["itk"]
linting = ["black", "flake8"]
pillow-heif = ["pillow-heif"]
pyav = ["av"]
rawpy = ["rawpy", "numpy (>2)"]
test = ["pytest", "pytest-cov", "fsspec"]
tifffile = ["tifffile"]

[[package]]
name = "importlib-metadata"
version = "8.4.0"
description = "Read metadata from Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
zipp = ">=0.5"

[package.extras]
doc = ["sphinx (>=3.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
perf = ["ipython"]
test = ["pytest (>=6,<8.1.0 || >=8.2.0)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-mypy", "pytest-enabler (>=2.2)", "packaging", "pyfakefs", "flufl.flake8", "pytest-perf (>=0.9.2)", "jaraco.test (>=5.4)", "importlib-resources (>=1.3)", "pytest-ruff (>=0.2.1)"]

[[package]]
name = "importlib-resources"
version = "6.4.4"
description = "Read resources from Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
zipp = {version = ">=3.1.0", markers = "python_version < \"3.10\""}

[package.extras]
check = ["pytest-checkdocs (>=2.4)", "pytest-ruff (>=0.2.1)"]
cover = ["pytest-cov"]
doc = ["sphinx (>=3.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
enabler = ["pytest-enabler (>=2.2)"]
test = ["pytest (>=6,<8.1.0 || >=8.2.0)", "zipp (>=3.17)", "jaraco.test (>=5.4)"]
type = ["pytest-mypy"]

[[package]]
name = "intel-openmp"
version = "2021.4.0"
description = "Intel OpenMP* Runtime Library"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "ipykernel"
version = "6.29.5"
description = "IPython Kernel for Jupyter"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
appnope = {version = "*", markers = "platform_system == \"Darwin\""}
comm = ">=0.1.1"
debugpy = ">=1.6.5"
ipython = ">=7.23.1"
jupyter-client = ">=6.1.12"
jupyter-core = ">=4.12,<5.0.0 || >=5.1.0"
matplotlib-inline = ">=0.1"
nest-asyncio = "*"
packaging = "*"
psutil = "*"
pyzmq = ">=24"
tornado = ">=6.1"
traitlets = ">=5.4.0"

[package.extras]
cov = ["coverage", "curio", "matplotlib", "pytest-cov", "trio"]
docs = ["myst-parser", "pydata-sphinx-theme", "sphinx", "sphinx-autodoc-typehints", "sphinxcontrib-github-alt", "sphinxcontrib-spelling", "trio"]
pyqt5 = ["pyqt5"]
pyside6 = ["pyside6"]
test = ["flaky", "ipyparallel", "pre-commit", "pytest-asyncio (>=0.23.5)", "pytest-cov", "pytest-timeout", "pytest (>=7.0)"]

[[package]]
name = "ipython"
version = "8.18.1"
description = "IPython: Productive Interactive Computing"
category = "dev"
optional = false
python-versions = ">=3.9"

[package.dependencies]
colorama = {version = "*", markers = "sys_platform == \"win32\""}
decorator = "*"
exceptiongroup = {version = "*", markers = "python_version < \"3.11\""}
jedi = ">=0.16"
matplotlib-inline = "*"
pexpect = {version = ">4.3", markers = "sys_platform != \"win32\""}
prompt-toolkit = ">=3.0.41,<3.1.0"
pygments = ">=2.4.0"
stack-data = "*"
traitlets = ">=5"
typing-extensions = {version = "*", markers = "python_version < \"3.10\""}

[package.extras]
all = ["black", "ipykernel", "setuptools (>=18.5)", "sphinx (>=1.3)", "sphinx-rtd-theme", "docrepr", "matplotlib", "stack-data", "pytest (<7)", "typing-extensions", "exceptiongroup", "pytest (<7.1)", "pytest-asyncio (<0.22)", "testpath", "pickleshare", "nbconvert", "nbformat", "ipywidgets", "notebook", "ipyparallel", "qtconsole", "curio", "matplotlib (!=3.2.0)", "numpy (>=1.22)", "pandas", "trio"]
black = ["black"]
doc = ["ipykernel", "setuptools (>=18.5)", "sphinx (>=1.3)", "sphinx-rtd-theme", "docrepr", "matplotlib", "stack-data", "pytest (<7)", "typing-extensions", "exceptiongroup", "pytest (<7.1)", "pytest-asyncio (<0.22)", "testpath", "pickleshare"]
kernel = ["ipykernel"]
nbconvert = ["nbconvert"]
nbformat = ["nbformat"]
notebook = ["ipywidgets", "notebook"]
parallel = ["ipyparallel"]
qtconsole = ["qtconsole"]
test = ["pytest (<7.1)", "pytest-asyncio (<0.22)", "testpath", "pickleshare"]
test_extra = ["pytest (<7.1)", "pytest-asyncio (<0.22)", "testpath", "pickleshare", "curio", "matplotlib (!=3.2.0)", "nbformat", "numpy (>=1.22)", "pandas", "trio"]

[[package]]
name = "jedi"
version = "0.19.1"
description = "An autocompletion tool for Python that can be used for text editors."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
parso = ">=0.8.3,<0.9.0"

[package.extras]
docs = ["Jinja2 (==2.11.3)", "MarkupSafe (==1.1.1)", "Pygments (==2.8.1)", "alabaster (==0.7.12)", "babel (==2.9.1)", "chardet (==4.0.0)", "commonmark (==0.8.1)", "docutils (==0.17.1)", "future (==0.18.2)", "idna (==2.10)", "imagesize (==1.2.0)", "mock (==1.0.1)", "packaging (==20.9)", "pyparsing (==2.4.7)", "pytz (==2021.1)", "readthedocs-sphinx-ext (==2.1.4)", "recommonmark (==0.5.0)", "requests (==2.25.1)", "six (==1.15.0)", "snowballstemmer (==2.1.0)", "sphinx-rtd-theme (==0.4.3)", "sphinx (==1.8.5)", "sphinxcontrib-serializinghtml (==1.1.4)", "sphinxcontrib-websupport (==1.2.4)", "urllib3 (==1.26.4)"]
qa = ["flake8 (==5.0.4)", "mypy (==0.971)", "types-setuptools (==67.2.0.1)"]
testing = ["django", "attrs", "colorama", "docopt", "pytest (<7.0.0)"]

[[package]]
name = "jinja2"
version = "3.1.4"
description = "A very fast and expressive template engine."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "jmespath"
version = "1.0.1"
description = "JSON Matching Expressions"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "joblib"
version = "1.4.2"
description = "Lightweight pipelining with Python functions"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "jsonschema"
version = "4.21.1"
description = "An implementation of JSON Schema validation for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
attrs = ">=22.2.0"
jsonschema-specifications = ">=2023.03.6"
referencing = ">=0.28.4"
rpds-py = ">=0.7.1"

[package.extras]
format = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3987", "uri-template", "webcolors (>=1.11)"]
format-nongpl = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3986-validator (>0.1.0)", "uri-template", "webcolors (>=1.11)"]

[[package]]
name = "jsonschema-specifications"
version = "2023.12.1"
description = "The JSON Schema meta-schemas and vocabularies, exposed as a Registry"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
referencing = ">=0.31.0"

[[package]]
name = "jupyter-client"
version = "8.6.2"
description = "Jupyter protocol implementation and client libraries"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
importlib-metadata = {version = ">=4.8.3", markers = "python_version < \"3.10\""}
jupyter-core = ">=4.12,<5.0.0 || >=5.1.0"
python-dateutil = ">=2.8.2"
pyzmq = ">=23.0"
tornado = ">=6.2"
traitlets = ">=5.3"

[package.extras]
docs = ["ipykernel", "myst-parser", "pydata-sphinx-theme", "sphinx-autodoc-typehints", "sphinx (>=4)", "sphinxcontrib-github-alt", "sphinxcontrib-spelling"]
test = ["coverage", "ipykernel (>=6.14)", "mypy", "paramiko", "pre-commit", "pytest-cov", "pytest-jupyter[client] (>=0.4.1)", "pytest-timeout", "pytest (<8.2.0)"]

[[package]]
name = "jupyter-core"
version = "5.7.2"
description = "Jupyter core package. A base package on which Jupyter projects rely."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
platformdirs = ">=2.5"
pywin32 = {version = ">=300", markers = "sys_platform == \"win32\" and platform_python_implementation != \"PyPy\""}
traitlets = ">=5.3"

[package.extras]
docs = ["myst-parser", "pydata-sphinx-theme", "sphinx-autodoc-typehints", "sphinxcontrib-github-alt", "sphinxcontrib-spelling", "traitlets"]
test = ["ipykernel", "pre-commit", "pytest-cov", "pytest-timeout", "pytest (<8)"]

[[package]]
name = "kiwisolver"
version = "1.4.5"
description = "A fast implementation of the Cassowary constraint solver"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "langcodes"
version = "3.4.0"
description = "Tools for labeling human languages with IETF language tags"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
language-data = ">=1.2"

[package.extras]
build = ["build", "twine"]
test = ["pytest", "pytest-cov"]

[[package]]
name = "language-data"
version = "1.2.0"
description = "Supplementary data about languages used by the langcodes module"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
marisa-trie = ">=0.7.7"

[package.extras]
build = ["build", "twine"]
test = ["pytest", "pytest-cov"]

[[package]]
name = "lazy-loader"
version = "0.4"
description = "Makes it easy to load subpackages and functions on demand."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
packaging = "*"

[package.extras]
dev = ["changelist (==0.5)"]
lint = ["pre-commit (==3.7.0)"]
test = ["pytest (>=7.4)", "pytest-cov (>=4.1)"]

[[package]]
name = "lightgbm"
version = "4.3.0"
description = "LightGBM Python Package"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
numpy = "*"
scipy = "*"

[package.extras]
arrow = ["cffi (>=1.15.1)", "pyarrow (>=6.0.1)"]
dask = ["dask[distributed,dataframe,array] (>=2.0.0)", "pandas (>=0.24.0)"]
pandas = ["pandas (>=0.24.0)"]
scikit-learn = ["scikit-learn (!=0.22.0)"]

[[package]]
name = "lightning"
version = "2.3.3"
description = "The Deep Learning framework to train, deploy, and ship AI products Lightning fast."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
fsspec = {version = ">=2022.5.0,<2026.0", extras = ["http"]}
lightning-utilities = ">=0.10.0,<2.0"
numpy = ">=1.17.2,<3.0"
packaging = ">=20.0,<25.0"
pytorch-lightning = "*"
PyYAML = ">=5.4,<8.0"
torch = ">=2.0.0,<4.0"
torchmetrics = ">=0.7.0,<3.0"
tqdm = ">=4.57.0,<6.0"
typing-extensions = ">=4.4.0,<6.0"

[package.extras]
dev = ["ipython[all] (<9.0)", "jsonargparse[signatures] (>=4.27.7,<5.0)", "lightning-utilities (>=0.8.0,<1.0)", "matplotlib (>3.1,<4.0)", "omegaconf (>=2.2.3,<3.0)", "onnx (>=0.14.0,<2.0)", "onnxruntime (>=0.15.0,<2.0)", "pandas (>1.0,<3.0)", "psutil (<6.0)", "pytest-cov (==4.1.0)", "pytest-random-order (==1.1.0)", "pytest-rerunfailures (==12.0)", "pytest-timeout (==2.1.0)", "pytest (==7.4.0)", "requests (<3.0)", "rich (>=12.3.0,<14.0)", "scikit-learn (>0.22.1,<2.0)", "tensorboard (>=2.9.1,<3.0)", "tensorboardX (>=2.2,<3.0)", "torchmetrics (>=0.10.0,<2.0)", "torchmetrics (>=0.7.0,<2.0)", "torchvision (>=0.15.0,<1.0)", "uvicorn", "deepspeed (>=0.8.2,<=0.9.3)", "bitsandbytes (>=0.42.0,<1.0)", "click (==8.1.7)", "cloudpickle (>=1.3,<3.0)", "coverage (==7.3.1)", "fastapi", "hydra-core (>=1.2.0,<2.0)"]
examples = ["ipython[all] (<9.0)", "lightning-utilities (>=0.8.0,<1.0)", "requests (<3.0)", "torchmetrics (>=0.10.0,<2.0)", "torchvision (>=0.15.0,<1.0)"]
extra = ["bitsandbytes (>=0.42.0,<1.0)", "hydra-core (>=1.2.0,<2.0)", "jsonargparse[signatures] (>=4.27.7,<5.0)", "matplotlib (>3.1,<4.0)", "omegaconf (>=2.2.3,<3.0)", "rich (>=12.3.0,<14.0)", "tensorboardX (>=2.2,<3.0)"]
fabric-all = ["bitsandbytes (>=0.42.0,<1.0)", "lightning-utilities (>=0.8.0,<1.0)", "torchmetrics (>=0.10.0,<2.0)", "torchvision (>=0.15.0,<1.0)", "deepspeed (>=0.8.2,<=0.9.3)"]
fabric-dev = ["bitsandbytes (>=0.42.0,<1.0)", "click (==8.1.7)", "coverage (==7.3.1)", "lightning-utilities (>=0.8.0,<1.0)", "pytest-cov (==4.1.0)", "pytest-random-order (==1.1.0)", "pytest-rerunfailures (==12.0)", "pytest-timeout (==2.1.0)", "pytest (==7.4.0)", "tensorboardX (>=2.2,<3.0)", "torchmetrics (>=0.10.0,<2.0)", "torchmetrics (>=0.7.0,<2.0)", "torchvision (>=0.15.0,<1.0)", "deepspeed (>=0.8.2,<=0.9.3)"]
fabric-examples = ["lightning-utilities (>=0.8.0,<1.0)", "torchmetrics (>=0.10.0,<2.0)", "torchvision (>=0.15.0,<1.0)"]
fabric-strategies = ["bitsandbytes (>=0.42.0,<1.0)", "deepspeed (>=0.8.2,<=0.9.3)"]
fabric-test = ["click (==8.1.7)", "coverage (==7.3.1)", "pytest-cov (==4.1.0)", "pytest-random-order (==1.1.0)", "pytest-rerunfailures (==12.0)", "pytest-timeout (==2.1.0)", "pytest (==7.4.0)", "tensorboardX (>=2.2,<3.0)", "torchmetrics (>=0.7.0,<2.0)"]
pytorch-all = ["bitsandbytes (>=0.42.0,<1.0)", "hydra-core (>=1.2.0,<2.0)", "ipython[all] (<9.0)", "jsonargparse[signatures] (>=4.27.7,<5.0)", "lightning-utilities (>=0.8.0,<1.0)", "matplotlib (>3.1,<4.0)", "omegaconf (>=2.2.3,<3.0)", "requests (<3.0)", "rich (>=12.3.0,<14.0)", "tensorboardX (>=2.2,<3.0)", "torchmetrics (>=0.10.0,<2.0)", "torchvision (>=0.15.0,<1.0)", "deepspeed (>=0.8.2,<=0.9.3)"]
all = ["bitsandbytes (>=0.42.0,<1.0)", "hydra-core (>=1.2.0,<2.0)", "ipython[all] (<9.0)", "jsonargparse[signatures] (>=4.27.7,<5.0)", "lightning-utilities (>=0.8.0,<1.0)", "matplotlib (>3.1,<4.0)", "omegaconf (>=2.2.3,<3.0)", "requests (<3.0)", "rich (>=12.3.0,<14.0)", "tensorboardX (>=2.2,<3.0)", "torchmetrics (>=0.10.0,<2.0)", "torchvision (>=0.15.0,<1.0)", "deepspeed (>=0.8.2,<=0.9.3)"]
app = ["lightning-app (>=2.3.3,<3.0)"]
data = ["litdata (>=0.2.0rc,<1.0)"]
pytorch-dev = ["bitsandbytes (>=0.42.0,<1.0)", "cloudpickle (>=1.3,<3.0)", "coverage (==7.3.1)", "fastapi", "hydra-core (>=1.2.0,<2.0)", "ipython[all] (<9.0)", "jsonargparse[signatures] (>=4.27.7,<5.0)", "lightning-utilities (>=0.8.0,<1.0)", "matplotlib (>3.1,<4.0)", "omegaconf (>=2.2.3,<3.0)", "onnx (>=0.14.0,<2.0)", "onnxruntime (>=0.15.0,<2.0)", "pandas (>1.0,<3.0)", "psutil (<6.0)", "pytest-cov (==4.1.0)", "pytest-random-order (==1.1.0)", "pytest-rerunfailures (==12.0)", "pytest-timeout (==2.1.0)", "pytest (==7.4.0)", "requests (<3.0)", "rich (>=12.3.0,<14.0)", "scikit-learn (>0.22.1,<2.0)", "tensorboard (>=2.9.1,<3.0)", "tensorboardX (>=2.2,<3.0)", "torchmetrics (>=0.10.0,<2.0)", "torchvision (>=0.15.0,<1.0)", "uvicorn", "deepspeed (>=0.8.2,<=0.9.3)"]
pytorch-examples = ["ipython[all] (<9.0)", "lightning-utilities (>=0.8.0,<1.0)", "requests (<3.0)", "torchmetrics (>=0.10.0,<2.0)", "torchvision (>=0.15.0,<1.0)"]
pytorch-extra = ["bitsandbytes (>=0.42.0,<1.0)", "hydra-core (>=1.2.0,<2.0)", "jsonargparse[signatures] (>=4.27.7,<5.0)", "matplotlib (>3.1,<4.0)", "omegaconf (>=2.2.3,<3.0)", "rich (>=12.3.0,<14.0)", "tensorboardX (>=2.2,<3.0)"]
pytorch-strategies = ["deepspeed (>=0.8.2,<=0.9.3)"]
pytorch-test = ["cloudpickle (>=1.3,<3.0)", "coverage (==7.3.1)", "fastapi", "onnx (>=0.14.0,<2.0)", "onnxruntime (>=0.15.0,<2.0)", "pandas (>1.0,<3.0)", "psutil (<6.0)", "pytest-cov (==4.1.0)", "pytest-random-order (==1.1.0)", "pytest-rerunfailures (==12.0)", "pytest-timeout (==2.1.0)", "pytest (==7.4.0)", "scikit-learn (>0.22.1,<2.0)", "tensorboard (>=2.9.1,<3.0)", "uvicorn"]
store-test = ["coverage (==7.3.1)", "pytest-cov (==4.1.0)", "pytest-random-order (==1.1.0)", "pytest-rerunfailures (==12.0)", "pytest-timeout (==2.1.0)", "pytest (==7.4.0)"]
strategies = ["bitsandbytes (>=0.42.0,<1.0)", "deepspeed (>=0.8.2,<=0.9.3)"]
test = ["click (==8.1.7)", "cloudpickle (>=1.3,<3.0)", "coverage (==7.3.1)", "fastapi", "onnx (>=0.14.0,<2.0)", "onnxruntime (>=0.15.0,<2.0)", "pandas (>1.0,<3.0)", "psutil (<6.0)", "pytest-cov (==4.1.0)", "pytest-random-order (==1.1.0)", "pytest-rerunfailures (==12.0)", "pytest-timeout (==2.1.0)", "pytest (==7.4.0)", "scikit-learn (>0.22.1,<2.0)", "tensorboard (>=2.9.1,<3.0)", "tensorboardX (>=2.2,<3.0)", "torchmetrics (>=0.7.0,<2.0)", "uvicorn"]

[[package]]
name = "lightning-utilities"
version = "0.11.6"
description = "Lightning toolbox for across the our ecosystem."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
packaging = ">=17.1"
typing-extensions = "*"

[package.extras]
cli = ["fire"]
docs = ["requests (>=2.0.0)"]
typing = ["mypy (>=1.0.0)", "types-setuptools"]

[[package]]
name = "llvmlite"
version = "0.43.0"
description = "lightweight wrapper around basic LLVM functionality"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "loguru"
version = "0.7.2"
description = "Python logging made (stupidly) simple"
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
colorama = {version = ">=0.3.4", markers = "sys_platform == \"win32\""}
win32-setctime = {version = ">=1.0.0", markers = "sys_platform == \"win32\""}

[package.extras]
dev = ["mypy (==v0.910)", "tox (==3.27.1)", "pytest (==6.1.2)", "pytest-cov (==2.12.1)", "colorama (==0.4.5)", "freezegun (==1.1.0)", "mypy (==v0.971)", "pytest-mypy-plugins (==1.9.3)", "exceptiongroup (==1.1.3)", "mypy (==v1.4.1)", "pre-commit (==3.4.0)", "tox (==4.11.0)", "pytest (==7.4.0)", "pytest-cov (==4.1.0)", "pytest-mypy-plugins (==3.0.0)", "colorama (==0.4.6)", "freezegun (==1.2.2)", "mypy (==v1.5.1)", "Sphinx (==7.2.5)", "sphinx-autobuild (==2021.3.14)", "sphinx-rtd-theme (==1.3.0)"]

[[package]]
name = "mangum"
version = "0.17.0"
description = "AWS Lambda support for ASGI applications"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
typing-extensions = "*"

[[package]]
name = "marisa-trie"
version = "1.2.0"
description = "Static memory-efficient and fast Trie-like structures for Python."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["hypothesis", "pytest", "readme-renderer"]

[[package]]
name = "markdown"
version = "3.7"
description = "Python implementation of John Gruber's Markdown."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
importlib-metadata = {version = ">=4.4", markers = "python_version < \"3.10\""}

[package.extras]
docs = ["mkdocs (>=1.5)", "mkdocs-nature (>=0.6)", "mdx-gh-links (>=0.2)", "mkdocstrings", "mkdocs-gen-files", "mkdocs-section-index", "mkdocs-literate-nav"]
testing = ["coverage", "pyyaml"]

[[package]]
name = "markdown-it-py"
version = "3.0.0"
description = "Python port of markdown-it. Markdown parsing, done right!"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
mdurl = ">=0.1,<1.0"

[package.extras]
benchmarking = ["psutil", "pytest", "pytest-benchmark"]
code_style = ["pre-commit (>=3.0,<4.0)"]
compare = ["commonmark (>=0.9,<1.0)", "markdown (>=3.4,<4.0)", "mistletoe (>=1.0,<2.0)", "mistune (>=2.0,<3.0)", "panflute (>=2.3,<3.0)"]
linkify = ["linkify-it-py (>=1,<3)"]
plugins = ["mdit-py-plugins"]
profiling = ["gprof2dot"]
rtd = ["mdit-py-plugins", "myst-parser", "pyyaml", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinx-book-theme", "jupyter-sphinx"]
testing = ["coverage", "pytest", "pytest-cov", "pytest-regressions"]

[[package]]
name = "markupsafe"
version = "2.1.5"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "matplotlib"
version = "3.9.2"
description = "Python plotting package"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
contourpy = ">=1.0.1"
cycler = ">=0.10"
fonttools = ">=4.22.0"
importlib-resources = {version = ">=3.2.0", markers = "python_version < \"3.10\""}
kiwisolver = ">=1.3.1"
numpy = ">=1.23"
packaging = ">=20.0"
pillow = ">=8"
pyparsing = ">=2.3.1"
python-dateutil = ">=2.7"

[package.extras]
dev = ["meson-python (>=0.13.1)", "numpy (>=1.25)", "pybind11 (>=2.6)", "setuptools_scm (>=7)", "setuptools (>=64)"]

[[package]]
name = "matplotlib-inline"
version = "0.1.7"
description = "Inline Matplotlib backend for Jupyter"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
traitlets = "*"

[[package]]
name = "mdurl"
version = "0.1.2"
description = "Markdown URL utilities"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "mkl"
version = "2021.4.0"
description = "Intel® oneAPI Math Kernel Library"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
intel-openmp = ">=2021.0.0,<2022.0.0"
tbb = ">=2021.0.0,<2022.0.0"

[[package]]
name = "mlforecast"
version = "0.10.0"
description = "Scalable machine learning based time series forecasting"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numba = "*"
pandas = "*"
scikit-learn = "*"
utilsforecast = ">=0.0.6"
window-ops = "*"

[package.extras]
dev = ["numba", "pandas", "scikit-learn", "utilsforecast (>=0.0.6)", "window-ops", "black", "dask", "datasetsforecast", "fugue", "lightgbm", "lightgbm-ray", "matplotlib", "mypy", "nbdev", "pyspark", "ruff", "utilsforecast", "xgboost", "xgboost-ray"]

[[package]]
name = "model-index"
version = "0.1.11"
description = "Create a source of truth for ML model results and browse it on Papers with Code"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
click = "*"
markdown = "*"
ordered-set = "*"
pyyaml = "*"

[[package]]
name = "mpmath"
version = "1.3.0"
description = "Python library for arbitrary-precision floating-point arithmetic"
category = "main"
optional = false
python-versions = "*"

[package.extras]
develop = ["pytest (>=4.6)", "pycodestyle", "pytest-cov", "codecov", "wheel"]
docs = ["sphinx"]
gmpy = ["gmpy2 (>=2.1.0a4)"]
tests = ["pytest (>=4.6)"]

[[package]]
name = "msgpack"
version = "1.0.8"
description = "MessagePack serializer"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "multidict"
version = "6.0.5"
description = "multidict implementation"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "multiprocess"
version = "0.70.16"
description = "better multiprocessing and multithreading in Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
dill = ">=0.3.8"

[[package]]
name = "murmurhash"
version = "1.0.10"
description = "Cython bindings for MurmurHash"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "nest-asyncio"
version = "1.6.0"
description = "Patch asyncio to allow nested event loops"
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "networkx"
version = "3.2.1"
description = "Python package for creating and manipulating graphs and networks"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
default = ["numpy (>=1.22)", "scipy (>=1.9,!=1.11.0,!=1.11.1)", "matplotlib (>=3.5)", "pandas (>=1.4)"]
developer = ["changelist (==0.4)", "pre-commit (>=3.2)", "mypy (>=1.1)", "rtoml"]
doc = ["sphinx (>=7)", "pydata-sphinx-theme (>=0.14)", "sphinx-gallery (>=0.14)", "numpydoc (>=1.6)", "pillow (>=9.4)", "nb2plots (>=0.7)", "texext (>=0.6.7)", "nbconvert (<7.9)"]
extra = ["lxml (>=4.6)", "pygraphviz (>=1.11)", "pydot (>=1.4.2)", "sympy (>=1.10)"]
test = ["pytest (>=7.2)", "pytest-cov (>=4.0)"]

[[package]]
name = "nlpaug"
version = "1.1.11"
description = "Natural language processing augmentation library for deep neural networks"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
gdown = ">=4.0.0"
numpy = ">=1.16.2"
pandas = ">=1.2.0"
requests = ">=2.22.0"

[[package]]
name = "nltk"
version = "3.9.1"
description = "Natural Language Toolkit"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
click = "*"
joblib = "*"
regex = ">=2021.8.3"
tqdm = "*"

[package.extras]
all = ["numpy", "requests", "twython", "python-crfsuite", "pyparsing", "scipy", "matplotlib", "scikit-learn"]
corenlp = ["requests"]
machine-learning = ["numpy", "python-crfsuite", "scikit-learn", "scipy"]
plot = ["matplotlib"]
tgrep = ["pyparsing"]
twitter = ["twython"]

[[package]]
name = "nptyping"
version = "2.4.1"
description = "Type hints for NumPy."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = {version = ">=1.20.0,<2.0.0", markers = "python_version >= \"3.8\""}
typing-extensions = {version = ">=4.0.0,<5.0.0", markers = "python_version < \"3.10\""}

[package.extras]
build = ["invoke (>=1.6.0)", "pip-tools (>=6.5.0)"]
complete = ["pandas", "pandas-stubs-fork"]
dev = ["invoke (>=1.6.0)", "pip-tools (>=6.5.0)", "autoflake", "black", "coverage", "codecov (>=2.1.0)", "feedparser", "isort", "mypy", "pylint", "pyright", "setuptools", "typeguard", "wheel", "pandas", "beartype (<0.10.0)", "beartype (>=0.10.0)", "pandas-stubs-fork"]
pandas = ["pandas", "pandas-stubs-fork"]
qa = ["autoflake", "black", "coverage", "codecov (>=2.1.0)", "feedparser", "isort", "mypy", "pylint", "pyright", "setuptools", "typeguard", "wheel", "beartype (<0.10.0)", "beartype (>=0.10.0)"]

[[package]]
name = "numba"
version = "0.60.0"
description = "compiling Python code using LLVM"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
llvmlite = ">=0.43.0dev0,<0.44"
numpy = ">=1.22,<2.1"

[[package]]
name = "numpy"
version = "1.26.4"
description = "Fundamental package for array computing in Python"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "nvidia-cublas-cu12"
version = "12.1.3.1"
description = "CUBLAS native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-cuda-cupti-cu12"
version = "12.1.105"
description = "CUDA profiling tools runtime libs."
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-cuda-nvrtc-cu12"
version = "12.1.105"
description = "NVRTC native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-cuda-runtime-cu12"
version = "12.1.105"
description = "CUDA Runtime native Libraries"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-cudnn-cu12"
version = "8.9.2.26"
description = "cuDNN runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[package.dependencies]
nvidia-cublas-cu12 = "*"

[[package]]
name = "nvidia-cufft-cu12"
version = "11.0.2.54"
description = "CUFFT native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-curand-cu12"
version = "10.3.2.106"
description = "CURAND native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-cusolver-cu12"
version = "11.4.5.107"
description = "CUDA solver native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[package.dependencies]
nvidia-cublas-cu12 = "*"
nvidia-cusparse-cu12 = "*"
nvidia-nvjitlink-cu12 = "*"

[[package]]
name = "nvidia-cusparse-cu12"
version = "12.1.0.106"
description = "CUSPARSE native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[package.dependencies]
nvidia-nvjitlink-cu12 = "*"

[[package]]
name = "nvidia-ml-py3"
version = "7.352.0"
description = "Python Bindings for the NVIDIA Management Library"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "nvidia-nccl-cu12"
version = "2.20.5"
description = "NVIDIA Collective Communication Library (NCCL) Runtime"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-nvjitlink-cu12"
version = "12.6.20"
description = "Nvidia JIT LTO Library"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-nvtx-cu12"
version = "12.1.105"
description = "NVIDIA Tools Extension"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "omegaconf"
version = "2.2.3"
description = "A flexible configuration library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
antlr4-python3-runtime = ">=4.9.0,<4.10.0"
PyYAML = ">=5.1.0"

[[package]]
name = "onnx"
version = "1.16.2"
description = "Open Neural Network Exchange"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.20"
protobuf = ">=3.20.2"

[package.extras]
reference = ["google-re2", "pillow"]

[[package]]
name = "onnxruntime"
version = "1.19.0"
description = "ONNX Runtime is a runtime accelerator for Machine Learning models"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
coloredlogs = "*"
flatbuffers = "*"
numpy = ">=1.21.6"
packaging = "*"
protobuf = "*"
sympy = "*"

[[package]]
name = "opencensus"
version = "0.11.4"
description = "A stats collection and distributed tracing framework"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
google-api-core = {version = ">=1.0.0,<3.0.0", markers = "python_version >= \"3.6\""}
opencensus-context = ">=0.1.3"
six = ">=1.16,<2.0"

[[package]]
name = "opencensus-context"
version = "0.1.3"
description = "OpenCensus Runtime Context"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "opendatalab"
version = "0.0.10"
description = "OpenDataLab Python SDK"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
click = ">=7.0.0"
colorama = "*"
openxlab = "*"
pycryptodome = "*"
pywin32 = {version = "*", markers = "platform_system == \"Windows\""}
requests = ">=2.4.2"
rich = "*"
tqdm = "*"

[[package]]
name = "openmim"
version = "0.3.9"
description = "MIM Installs OpenMMLab packages"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
Click = "*"
colorama = "*"
model-index = "*"
opendatalab = "*"
pandas = "*"
requests = "*"
rich = "*"
tabulate = "*"

[package.extras]
all = ["click", "colorama", "model-index", "opendatalab", "pandas", "pip (>=19.3)", "requests", "rich", "tabulate", "docutils (==0.16.0)", "myst-parser", "pytorch-sphinx-theme", "sphinx (==4.0.2)", "sphinx-copybutton", "sphinx-markdown-tables", "coverage", "flake8", "interrogate", "pytest"]
tests = ["coverage", "flake8", "interrogate", "pytest"]

[[package]]
name = "openxlab"
version = "0.0.11"
description = "openxlab tools"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "optimum"
version = "1.17.1"
description = "Optimum Library is an extension of the Hugging Face Transformers library, providing a framework to integrate third-party libraries from Hardware Partners and interface with their specific functionality."
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
coloredlogs = "*"
datasets = [
    {version = "*"},
    {version = ">=1.2.1", optional = true, markers = "extra == \"onnxruntime\""},
]
evaluate = {version = "*", optional = true, markers = "extra == \"onnxruntime\""}
huggingface-hub = ">=0.8.0"
numpy = "*"
onnx = {version = "*", optional = true, markers = "extra == \"onnxruntime\""}
onnxruntime = {version = ">=1.11.0", optional = true, markers = "extra == \"onnxruntime\""}
packaging = "*"
protobuf = {version = ">=3.20.1", optional = true, markers = "extra == \"onnxruntime\""}
sympy = "*"
torch = ">=1.11"
transformers = {version = ">=4.26.0", extras = ["sentencepiece"]}

[package.extras]
amd = ["optimum-amd"]
benchmark = ["optuna", "tqdm", "scikit-learn", "seqeval", "torchvision", "evaluate (>=0.2.0)"]
dev = ["accelerate", "pytest", "requests", "parameterized", "pytest-xdist", "pillow", "sacremoses", "torchvision", "diffusers (>=0.17.0)", "torchaudio", "einops", "invisible-watermark", "timm", "scikit-learn", "rjieba", "black (>=23.1,<24.0)", "ruff (==0.1.5)"]
diffusers = ["diffusers"]
doc-build = ["accelerate"]
exporters = ["onnx", "onnxruntime", "timm"]
exporters-gpu = ["onnx", "onnxruntime-gpu", "timm"]
exporters-tf = ["tensorflow (>=2.4,<=2.12.1)", "tf2onnx", "onnx", "onnxruntime", "timm", "h5py", "numpy (<1.24.0)"]
furiosa = ["optimum-furiosa"]
graphcore = ["optimum-graphcore"]
habana = ["optimum-habana", "transformers (>=4.37.0,<4.38.0)"]
intel = ["optimum-intel (>=1.15.0)"]
neural-compressor = ["optimum-intel[neural-compressor] (>=1.15.0)"]
neuron = ["optimum-neuron"]
neuronx = ["optimum-neuron"]
nncf = ["optimum-intel[nncf] (>=1.15.0)"]
onnxruntime = ["onnx", "onnxruntime (>=1.11.0)", "datasets (>=1.2.1)", "evaluate", "protobuf (>=3.20.1)"]
onnxruntime-gpu = ["onnx", "onnxruntime-gpu (>=1.11.0)", "datasets (>=1.2.1)", "evaluate", "protobuf (>=3.20.1)", "accelerate"]
openvino = ["optimum-intel[openvino] (>=1.15.0)"]
quality = ["black (>=23.1,<24.0)", "ruff (==0.1.5)"]
tests = ["accelerate", "pytest", "requests", "parameterized", "pytest-xdist", "pillow", "sacremoses", "torchvision", "diffusers (>=0.17.0)", "torchaudio", "einops", "invisible-watermark", "timm", "scikit-learn", "rjieba"]

[[package]]
name = "ordered-set"
version = "4.1.0"
description = "An OrderedSet is a custom MutableSet that remembers its order, so that every"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
dev = ["pytest", "black", "mypy"]

[[package]]
name = "orjson"
version = "3.10.7"
description = "Fast, correct Python JSON library supporting dataclasses, datetimes, and numpy"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "packaging"
version = "24.1"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pandas"
version = "2.2.2"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
numpy = [
    {version = ">=1.22.4", markers = "python_version < \"3.11\""},
    {version = ">=1.23.2", markers = "python_version == \"3.11\""},
]
python-dateutil = ">=2.8.2"
pytz = ">=2020.1"
tzdata = ">=2022.7"

[package.extras]
test = ["hypothesis (>=6.46.1)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)"]
pyarrow = ["pyarrow (>=10.0.1)"]
performance = ["bottleneck (>=1.3.6)", "numba (>=0.56.4)", "numexpr (>=2.8.4)"]
computation = ["scipy (>=1.10.0)", "xarray (>=2022.12.0)"]
fss = ["fsspec (>=2022.11.0)"]
aws = ["s3fs (>=2022.11.0)"]
gcp = ["gcsfs (>=2022.11.0)", "pandas-gbq (>=0.19.0)"]
excel = ["odfpy (>=1.4.1)", "openpyxl (>=3.1.0)", "python-calamine (>=0.1.7)", "pyxlsb (>=1.0.10)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.5)"]
parquet = ["pyarrow (>=10.0.1)"]
feather = ["pyarrow (>=10.0.1)"]
hdf5 = ["tables (>=3.8.0)"]
spss = ["pyreadstat (>=1.2.0)"]
postgresql = ["SQLAlchemy (>=2.0.0)", "psycopg2 (>=2.9.6)", "adbc-driver-postgresql (>=0.8.0)"]
mysql = ["SQLAlchemy (>=2.0.0)", "pymysql (>=1.0.2)"]
sql-other = ["SQLAlchemy (>=2.0.0)", "adbc-driver-postgresql (>=0.8.0)", "adbc-driver-sqlite (>=0.8.0)"]
html = ["beautifulsoup4 (>=4.11.2)", "html5lib (>=1.1)", "lxml (>=4.9.2)"]
xml = ["lxml (>=4.9.2)"]
plot = ["matplotlib (>=3.6.3)"]
output-formatting = ["jinja2 (>=3.1.2)", "tabulate (>=0.9.0)"]
clipboard = ["PyQt5 (>=5.15.9)", "qtpy (>=2.3.0)"]
compression = ["zstandard (>=0.19.0)"]
consortium-standard = ["dataframe-api-compat (>=0.1.7)"]
all = ["adbc-driver-postgresql (>=0.8.0)", "adbc-driver-sqlite (>=0.8.0)", "beautifulsoup4 (>=4.11.2)", "bottleneck (>=1.3.6)", "dataframe-api-compat (>=0.1.7)", "fastparquet (>=2022.12.0)", "fsspec (>=2022.11.0)", "gcsfs (>=2022.11.0)", "html5lib (>=1.1)", "hypothesis (>=6.46.1)", "jinja2 (>=3.1.2)", "lxml (>=4.9.2)", "matplotlib (>=3.6.3)", "numba (>=0.56.4)", "numexpr (>=2.8.4)", "odfpy (>=1.4.1)", "openpyxl (>=3.1.0)", "pandas-gbq (>=0.19.0)", "psycopg2 (>=2.9.6)", "pyarrow (>=10.0.1)", "pymysql (>=1.0.2)", "PyQt5 (>=5.15.9)", "pyreadstat (>=1.2.0)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)", "python-calamine (>=0.1.7)", "pyxlsb (>=1.0.10)", "qtpy (>=2.3.0)", "scipy (>=1.10.0)", "s3fs (>=2022.11.0)", "SQLAlchemy (>=2.0.0)", "tables (>=3.8.0)", "tabulate (>=0.9.0)", "xarray (>=2022.12.0)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.5)", "zstandard (>=0.19.0)"]

[[package]]
name = "parso"
version = "0.8.4"
description = "A Python Parser"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
qa = ["flake8 (==5.0.4)", "mypy (==0.971)", "types-setuptools (==67.2.0.1)"]
testing = ["docopt", "pytest"]

[[package]]
name = "patsy"
version = "0.5.6"
description = "A Python package for describing statistical models and for building design matrices."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = ">=1.4"
six = "*"

[package.extras]
test = ["pytest", "pytest-cov", "scipy"]

[[package]]
name = "pdf2image"
version = "1.17.0"
description = "A wrapper around the pdftoppm and pdftocairo command line tools to convert PDF to a PIL Image list."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pillow = "*"

[[package]]
name = "pexpect"
version = "4.9.0"
description = "Pexpect allows easy control of interactive console applications."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
ptyprocess = ">=0.5"

[[package]]
name = "pillow"
version = "10.4.0"
description = "Python Imaging Library (Fork)"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["furo", "olefile", "sphinx (>=7.3)", "sphinx-copybutton", "sphinx-inline-tabs", "sphinxext-opengraph"]
fpx = ["olefile"]
mic = ["olefile"]
tests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout"]
typing = ["typing-extensions"]
xmp = ["defusedxml"]

[[package]]
name = "platformdirs"
version = "4.2.2"
description = "A small Python package for determining appropriate platform-specific dirs, e.g. a `user data dir`."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["furo (>=2023.9.10)", "proselint (>=0.13)", "sphinx-autodoc-typehints (>=1.25.2)", "sphinx (>=7.2.6)"]
test = ["appdirs (==1.4.4)", "covdefaults (>=2.3)", "pytest-cov (>=4.1)", "pytest-mock (>=3.12)", "pytest (>=7.4.3)"]
type = ["mypy (>=1.8)"]

[[package]]
name = "plotly"
version = "5.23.0"
description = "An open-source, interactive data visualization library for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
packaging = "*"
tenacity = ">=6.2.0"

[[package]]
name = "preshed"
version = "3.0.9"
description = "Cython hash table that trusts the keys are pre-hashed"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cymem = ">=2.0.2,<2.1.0"
murmurhash = ">=0.28.0,<1.1.0"

[[package]]
name = "prometheus-client"
version = "0.20.0"
description = "Python client for the Prometheus monitoring system."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
twisted = ["twisted"]

[[package]]
name = "prompt-toolkit"
version = "3.0.47"
description = "Library for building powerful interactive command lines in Python"
category = "dev"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
wcwidth = "*"

[[package]]
name = "proto-plus"
version = "1.24.0"
description = "Beautiful, Pythonic protocol buffers."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
protobuf = ">=3.19.0,<6.0.0dev"

[package.extras]
testing = ["google-api-core (>=1.31.5)"]

[[package]]
name = "protobuf"
version = "5.27.3"
description = ""
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "psutil"
version = "5.9.8"
description = "Cross-platform lib for process and system monitoring in Python."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.extras]
test = ["enum34", "ipaddress", "mock", "pywin32", "wmi"]

[[package]]
name = "ptyprocess"
version = "0.7.0"
description = "Run a subprocess in a pseudo terminal"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "pure-eval"
version = "0.2.3"
description = "Safely evaluate AST nodes without side effects"
category = "dev"
optional = false
python-versions = "*"

[package.extras]
tests = ["pytest"]

[[package]]
name = "py-spy"
version = "0.3.14"
description = "Sampling profiler for Python programs"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "py4j"
version = "0.10.9.7"
description = "Enables Python programs to dynamically access arbitrary Java objects"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyarrow"
version = "17.0.0"
description = "Python library for Apache Arrow"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.16.6"

[package.extras]
test = ["pytest", "hypothesis", "cffi", "pytz", "pandas"]

[[package]]
name = "pyasn1"
version = "0.6.0"
description = "Pure-Python implementation of ASN.1 types and DER/BER/CER codecs (X.208)"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pyasn1-modules"
version = "0.4.0"
description = "A collection of ASN.1-based protocols modules"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pyasn1 = ">=0.4.6,<0.7.0"

[[package]]
name = "pycparser"
version = "2.22"
description = "C parser in Python"
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pycryptodome"
version = "3.20.0"
description = "Cryptographic library for Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pydantic"
version = "2.8.2"
description = "Data validation using Python type hints"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
annotated-types = ">=0.4.0"
pydantic-core = "2.20.1"
typing-extensions = {version = ">=4.6.1", markers = "python_version < \"3.13\""}

[package.extras]
email = ["email-validator (>=2.0.0)"]

[[package]]
name = "pydantic-core"
version = "2.20.1"
description = "Core functionality for Pydantic validation and serialization"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
typing-extensions = ">=4.6.0,<4.7.0 || >4.7.0"

[[package]]
name = "pygments"
version = "2.18.0"
description = "Pygments is a syntax highlighting package written in Python."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
windows-terminal = ["colorama (>=0.4.6)"]

[[package]]
name = "pyparsing"
version = "3.1.4"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "main"
optional = false
python-versions = ">=3.6.8"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "pyreadline3"
version = "3.4.1"
description = "A python implementation of GNU readline."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pysocks"
version = "1.7.1"
description = "A Python SOCKS client module. See https://github.com/Anorov/PySocks for more information."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pytesseract"
version = "0.3.10"
description = "Python-tesseract is a python wrapper for Google's Tesseract-OCR"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
packaging = ">=21.3"
Pillow = ">=8.0.0"

[[package]]
name = "python-dateutil"
version = "2.9.0.post0"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "python-dotenv"
version = "1.0.1"
description = "Read key-value pairs from a .env file and set them as environment variables"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
cli = ["click (>=5.0)"]

[[package]]
name = "pytorch-lightning"
version = "2.3.3"
description = "PyTorch Lightning is the lightweight PyTorch wrapper for ML researchers. Scale your models. Write less boilerplate."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
fsspec = {version = ">=2022.5.0", extras = ["http"]}
lightning-utilities = ">=0.10.0"
numpy = ">=1.17.2"
packaging = ">=20.0"
PyYAML = ">=5.4"
torch = ">=2.0.0"
torchmetrics = ">=0.7.0"
tqdm = ">=4.57.0"
typing-extensions = ">=4.4.0"

[package.extras]
all = ["matplotlib (>3.1)", "omegaconf (>=2.2.3)", "hydra-core (>=1.2.0)", "jsonargparse[signatures] (>=4.27.7)", "rich (>=12.3.0)", "tensorboardX (>=2.2)", "bitsandbytes (>=0.42.0)", "requests (<2.32.0)", "torchvision (>=0.15.0)", "ipython[all] (<8.15.0)", "torchmetrics (>=0.10.0)", "lightning-utilities (>=0.8.0)", "deepspeed (>=0.8.2,<=0.9.3)"]
deepspeed = ["deepspeed (>=0.8.2,<=0.9.3)"]
dev = ["matplotlib (>3.1)", "omegaconf (>=2.2.3)", "hydra-core (>=1.2.0)", "jsonargparse[signatures] (>=4.27.7)", "rich (>=12.3.0)", "tensorboardX (>=2.2)", "bitsandbytes (>=0.42.0)", "requests (<2.32.0)", "torchvision (>=0.15.0)", "ipython[all] (<8.15.0)", "torchmetrics (>=0.10.0)", "lightning-utilities (>=0.8.0)", "coverage (==7.3.1)", "pytest (==7.4.0)", "pytest-cov (==4.1.0)", "pytest-timeout (==2.1.0)", "pytest-rerunfailures (==12.0)", "pytest-random-order (==1.1.0)", "cloudpickle (>=1.3)", "scikit-learn (>0.22.1)", "onnx (>=0.14.0)", "onnxruntime (>=0.15.0)", "psutil (<5.9.6)", "pandas (>1.0)", "fastapi", "uvicorn", "tensorboard (>=2.9.1)", "deepspeed (>=0.8.2,<=0.9.3)"]
examples = ["requests (<2.32.0)", "torchvision (>=0.15.0)", "ipython[all] (<8.15.0)", "torchmetrics (>=0.10.0)", "lightning-utilities (>=0.8.0)"]
extra = ["matplotlib (>3.1)", "omegaconf (>=2.2.3)", "hydra-core (>=1.2.0)", "jsonargparse[signatures] (>=4.27.7)", "rich (>=12.3.0)", "tensorboardX (>=2.2)", "bitsandbytes (>=0.42.0)"]
strategies = ["deepspeed (>=0.8.2,<=0.9.3)"]
test = ["coverage (==7.3.1)", "pytest (==7.4.0)", "pytest-cov (==4.1.0)", "pytest-timeout (==2.1.0)", "pytest-rerunfailures (==12.0)", "pytest-random-order (==1.1.0)", "cloudpickle (>=1.3)", "scikit-learn (>0.22.1)", "onnx (>=0.14.0)", "onnxruntime (>=0.15.0)", "psutil (<5.9.6)", "pandas (>1.0)", "fastapi", "uvicorn", "tensorboard (>=2.9.1)"]

[[package]]
name = "pytorch-metric-learning"
version = "2.3.0"
description = "The easiest way to use deep metric learning in your application. Modular, flexible, and extensible. Written in PyTorch."
category = "main"
optional = false
python-versions = ">=3.0"

[package.dependencies]
numpy = "*"
scikit-learn = "*"
torch = ">=1.6.0"
tqdm = "*"

[package.extras]
dev = ["black", "isort", "nbqa", "flake8"]
docs = ["mkdocs-material"]
with-hooks = ["record-keeper (>=0.9.32)", "faiss-gpu (>=1.6.3)", "tensorboard"]
with-hooks-cpu = ["record-keeper (>=0.9.32)", "faiss-cpu (>=1.6.3)", "tensorboard"]

[[package]]
name = "pytz"
version = "2024.1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pywavelets"
version = "1.6.0"
description = "PyWavelets, wavelet transform module"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
numpy = ">=1.22.4,<3"

[[package]]
name = "pywin32"
version = "306"
description = "Python for Window Extensions"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyyaml"
version = "6.0.2"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pyzmq"
version = "26.2.0"
description = "Python bindings for 0MQ"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cffi = {version = "*", markers = "implementation_name == \"pypy\""}

[[package]]
name = "ray"
version = "2.10.0"
description = "Ray provides a simple, universal API for building distributed applications."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
aiohttp = {version = ">=3.7", optional = true, markers = "extra == \"default\""}
aiohttp-cors = {version = "*", optional = true, markers = "extra == \"default\""}
aiosignal = "*"
click = ">=7.0"
colorful = {version = "*", optional = true, markers = "extra == \"default\""}
filelock = "*"
frozenlist = "*"
fsspec = {version = "*", optional = true, markers = "extra == \"tune\""}
grpcio = [
    {version = ">=1.32.0", optional = true, markers = "python_version < \"3.10\" or python_version < \"3.10\" and extra == \"default\""},
    {version = ">=1.42.0", optional = true, markers = "python_version >= \"3.10\" or python_version >= \"3.10\" and extra == \"default\""},
]
jsonschema = "*"
msgpack = ">=1.0.0,<2.0.0"
opencensus = {version = "*", optional = true, markers = "extra == \"default\""}
packaging = "*"
pandas = {version = "*", optional = true, markers = "extra == \"tune\""}
prometheus-client = {version = ">=0.7.1", optional = true, markers = "extra == \"default\""}
protobuf = ">=3.15.3,<3.19.5 || >3.19.5"
py-spy = {version = ">=0.2.0", optional = true, markers = "extra == \"default\""}
pyarrow = {version = ">=6.0.1", optional = true, markers = "extra == \"tune\""}
pydantic = {version = "<2.0.0 || >=2.5.0,<3", optional = true, markers = "extra == \"default\""}
pyyaml = "*"
requests = "*"
smart-open = {version = "*", optional = true, markers = "extra == \"default\""}
tensorboardX = {version = ">=1.9", optional = true, markers = "extra == \"tune\""}
virtualenv = {version = ">=20.0.24,<20.21.1 || >20.21.1", optional = true, markers = "extra == \"default\""}

[package.extras]
air = ["aiohttp-cors", "virtualenv (>=20.0.24,!=20.21.1)", "colorful", "pandas (>=1.3)", "aiohttp (>=3.7)", "fsspec", "tensorboardX (>=1.9)", "starlette", "pandas", "requests", "prometheus-client (>=0.7.1)", "pyarrow (>=6.0.1)", "numpy (>=1.20)", "py-spy (>=0.2.0)", "uvicorn", "opencensus", "watchfiles", "fastapi", "smart-open", "pydantic (<2.0.0 || >=2.5.0,<3)", "grpcio (>=1.32.0)", "grpcio (>=1.42.0)"]
all = ["aiohttp-cors", "virtualenv (>=20.0.24,!=20.21.1)", "lz4", "gymnasium (==0.28.1)", "grpcio (!=1.56.0)", "colorful", "pandas (>=1.3)", "aiohttp (>=3.7)", "ray-cpp (==2.10.0)", "dm-tree", "fsspec", "tensorboardX (>=1.9)", "starlette", "opentelemetry-sdk", "pandas", "requests", "prometheus-client (>=0.7.1)", "scikit-image", "pyarrow (>=6.0.1)", "numpy (>=1.20)", "py-spy (>=0.2.0)", "pyyaml", "opentelemetry-api", "rich", "typer", "uvicorn", "opencensus", "scipy", "watchfiles", "fastapi", "smart-open", "pydantic (<2.0.0 || >=2.5.0,<3)", "opentelemetry-exporter-otlp", "grpcio (>=1.32.0)", "grpcio (>=1.42.0)"]
client = ["grpcio (!=1.56.0)"]
cpp = ["ray-cpp (==2.10.0)"]
data = ["numpy (>=1.20)", "pandas (>=1.3)", "pyarrow (>=6.0.1)", "fsspec"]
default = ["aiohttp (>=3.7)", "aiohttp-cors", "colorful", "py-spy (>=0.2.0)", "requests", "opencensus", "pydantic (<2.0.0 || >=2.5.0,<3)", "prometheus-client (>=0.7.1)", "smart-open", "virtualenv (>=20.0.24,!=20.21.1)", "grpcio (>=1.32.0)", "grpcio (>=1.42.0)"]
observability = ["opentelemetry-api", "opentelemetry-sdk", "opentelemetry-exporter-otlp"]
rllib = ["pandas", "tensorboardX (>=1.9)", "requests", "pyarrow (>=6.0.1)", "fsspec", "dm-tree", "gymnasium (==0.28.1)", "lz4", "scikit-image", "pyyaml", "scipy", "typer", "rich"]
serve = ["opencensus", "aiohttp-cors", "starlette", "colorful", "watchfiles", "virtualenv (>=20.0.24,!=20.21.1)", "requests", "fastapi", "prometheus-client (>=0.7.1)", "smart-open", "aiohttp (>=3.7)", "pydantic (<2.0.0 || >=2.5.0,<3)", "py-spy (>=0.2.0)", "uvicorn", "grpcio (>=1.32.0)", "grpcio (>=1.42.0)"]
serve-grpc = ["opencensus", "aiohttp-cors", "starlette", "watchfiles", "virtualenv (>=20.0.24,!=20.21.1)", "aiohttp (>=3.7)", "requests", "fastapi", "prometheus-client (>=0.7.1)", "smart-open", "colorful", "pydantic (<2.0.0 || >=2.5.0,<3)", "py-spy (>=0.2.0)", "uvicorn", "grpcio (>=1.32.0)", "grpcio (>=1.42.0)"]
train = ["pandas", "tensorboardX (>=1.9)", "requests", "pyarrow (>=6.0.1)", "fsspec"]
tune = ["pandas", "tensorboardX (>=1.9)", "requests", "pyarrow (>=6.0.1)", "fsspec"]

[[package]]
name = "referencing"
version = "0.35.1"
description = "JSON Referencing + Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
attrs = ">=22.2.0"
rpds-py = ">=0.7.0"

[[package]]
name = "regex"
version = "2024.7.24"
description = "Alternative regular expression module, to replace re."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "requests"
version = "2.32.3"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<4"
idna = ">=2.5,<4"
PySocks = {version = ">=1.5.6,<1.5.7 || >1.5.7", optional = true, markers = "extra == \"socks\""}
urllib3 = ">=1.21.1,<3"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use-chardet-on-py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "rich"
version = "13.8.0"
description = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
markdown-it-py = ">=2.2.0"
pygments = ">=2.13.0,<3.0.0"

[package.extras]
jupyter = ["ipywidgets (>=7.5.1,<9)"]

[[package]]
name = "rpds-py"
version = "0.20.0"
description = "Python bindings to Rust's persistent data structures (rpds)"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "rsa"
version = "4.9"
description = "Pure-Python RSA implementation"
category = "main"
optional = false
python-versions = ">=3.6,<4"

[package.dependencies]
pyasn1 = ">=0.1.3"

[[package]]
name = "s3transfer"
version = "0.10.2"
description = "An Amazon S3 Transfer Manager"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
botocore = ">=1.33.2,<2.0a.0"

[package.extras]
crt = ["botocore[crt] (>=1.33.2,<2.0a.0)"]

[[package]]
name = "safetensors"
version = "0.4.4"
description = ""
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
numpy = ["numpy (>=1.21.6)"]
torch = ["safetensors", "torch (>=1.10)"]
tensorflow = ["safetensors", "tensorflow (>=2.11.0)"]
pinned-tf = ["safetensors", "tensorflow (==2.11.0)"]
jax = ["safetensors", "flax (>=0.6.3)", "jax (>=0.3.25)", "jaxlib (>=0.3.25)"]
mlx = ["mlx (>=0.0.9)"]
paddlepaddle = ["safetensors", "paddlepaddle (>=2.4.1)"]
quality = ["black (==22.3)", "click (==8.0.4)", "isort (>=5.5.4)", "flake8 (>=3.8.3)"]
testing = ["safetensors", "h5py (>=3.7.0)", "huggingface-hub (>=0.12.1)", "setuptools-rust (>=1.5.2)", "pytest (>=7.2.0)", "pytest-benchmark (>=4.0.0)", "hypothesis (>=6.70.2)"]
all = ["safetensors", "safetensors", "safetensors", "safetensors", "safetensors", "safetensors", "safetensors"]
dev = ["safetensors"]

[[package]]
name = "scikit-image"
version = "0.19.3"
description = "Image processing in Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
imageio = ">=2.4.1"
networkx = ">=2.2"
numpy = ">=1.17.0"
packaging = ">=20.0"
pillow = ">=6.1.0,<7.1.0 || >7.1.0,<7.1.1 || >7.1.1,<8.3.0 || >8.3.0"
PyWavelets = ">=1.1.1"
scipy = ">=1.4.1"
tifffile = ">=2019.7.26"

[package.extras]
data = ["pooch (>=1.3.0)"]
docs = ["sphinx (>=1.8)", "sphinx-gallery (>=0.10.1)", "numpydoc (>=1.0)", "sphinx-copybutton", "pytest-runner", "scikit-learn", "matplotlib (>=3.3)", "dask[array] (>=0.15.0,!=2.17.0)", "cloudpickle (>=0.2.1)", "pandas (>=0.23.0)", "seaborn (>=0.7.1)", "pooch (>=1.3.0)", "tifffile (>=2020.5.30)", "myst-parser", "ipywidgets", "plotly (>=4.14.0)", "kaleido"]
optional = ["simpleitk", "astropy (>=3.1.2)", "cloudpickle (>=0.2.1)", "dask[array] (>=1.0.0,!=2.17.0)", "matplotlib (>=3.0.3)", "pooch (>=1.3.0)", "pyamg", "qtpy"]
test = ["asv", "codecov", "flake8", "matplotlib (>=3.0.3)", "pooch (>=1.3.0)", "pytest (>=5.2.0)", "pytest-cov (>=2.7.0)", "pytest-localserver", "pytest-faulthandler"]

[[package]]
name = "scikit-image"
version = "0.20.0"
description = "Image processing in Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
imageio = ">=2.4.1"
lazy_loader = ">=0.1"
networkx = ">=2.8"
numpy = ">=1.21.1"
packaging = ">=20.0"
pillow = ">=9.0.1"
PyWavelets = ">=1.1.1"
scipy = {version = ">=1.8", markers = "python_version > \"3.9\""}
tifffile = ">=2019.7.26"

[package.extras]
build = ["meson-python (>=0.13.0rc0)", "wheel", "setuptools (>=67)", "packaging (>=20)", "ninja", "Cython (>=0.29.24)", "pythran", "numpy (>=1.21.1)", "build"]
data = ["pooch (>=1.3.0)"]
default = ["numpy (>=1.21.1)", "scipy (>=1.8,<1.9.2)", "scipy (>=1.8)", "networkx (>=2.8)", "pillow (>=9.0.1)", "imageio (>=2.4.1)", "tifffile (>=2019.7.26)", "PyWavelets (>=1.1.1)", "packaging (>=20.0)", "lazy_loader (>=0.1)"]
developer = ["pre-commit", "rtoml"]
docs = ["sphinx (>=5.2)", "sphinx-gallery (>=0.11)", "numpydoc (>=1.5)", "sphinx-copybutton", "pytest-runner", "scikit-learn", "matplotlib (>=3.6)", "dask[array] (>=2022.9.2)", "pandas (>=1.5)", "seaborn (>=0.11)", "pooch (>=1.6)", "tifffile (>=2022.8.12)", "myst-parser", "ipywidgets", "plotly (>=5.10)", "kaleido"]
optional = ["simpleitk", "astropy (>=3.1.2)", "cloudpickle (>=0.2.1)", "dask[array] (>=1.0.0,!=2.17.0)", "matplotlib (>=3.3)", "pooch (>=1.3.0)", "pyamg"]
test = ["asv", "codecov", "matplotlib (>=3.3)", "pooch (>=1.3.0)", "pytest (>=5.2.0)", "pytest-cov (>=2.7.0)", "pytest-localserver", "pytest-faulthandler"]

[[package]]
name = "scikit-learn"
version = "1.3.2"
description = "A set of python modules for machine learning and data mining"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
joblib = ">=1.1.1"
numpy = ">=1.17.3,<2.0"
scipy = ">=1.5.0"
threadpoolctl = ">=2.0.0"

[package.extras]
benchmark = ["matplotlib (>=3.1.3)", "pandas (>=1.0.5)", "memory-profiler (>=0.57.0)"]
docs = ["matplotlib (>=3.1.3)", "scikit-image (>=0.16.2)", "pandas (>=1.0.5)", "seaborn (>=0.9.0)", "memory-profiler (>=0.57.0)", "sphinx (>=6.0.0)", "sphinx-copybutton (>=0.5.2)", "sphinx-gallery (>=0.10.1)", "numpydoc (>=1.2.0)", "Pillow (>=7.1.2)", "pooch (>=1.6.0)", "sphinx-prompt (>=1.3.0)", "sphinxext-opengraph (>=0.4.2)", "plotly (>=5.14.0)"]
examples = ["matplotlib (>=3.1.3)", "scikit-image (>=0.16.2)", "pandas (>=1.0.5)", "seaborn (>=0.9.0)", "pooch (>=1.6.0)", "plotly (>=5.14.0)"]
tests = ["matplotlib (>=3.1.3)", "scikit-image (>=0.16.2)", "pandas (>=1.0.5)", "pytest (>=7.1.2)", "pytest-cov (>=2.9.0)", "ruff (>=0.0.272)", "black (>=23.3.0)", "mypy (>=1.3)", "pyamg (>=4.0.0)", "numpydoc (>=1.2.0)", "pooch (>=1.6.0)"]

[[package]]
name = "scipy"
version = "1.12.0"
description = "Fundamental algorithms for scientific computing in Python"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
numpy = ">=1.22.4,<1.29.0"

[package.extras]
test = ["pytest", "pytest-cov", "pytest-timeout", "pytest-xdist", "asv", "mpmath", "gmpy2", "threadpoolctl", "scikit-umfpack", "pooch", "hypothesis"]
doc = ["sphinx (!=4.1.0)", "pydata-sphinx-theme (==0.9.0)", "sphinx-design (>=0.2.0)", "matplotlib (>2)", "numpydoc", "jupytext", "myst-nb", "pooch"]
dev = ["mypy", "typing-extensions", "types-psutil", "pycodestyle", "ruff", "cython-lint (>=0.12.2)", "rich-click", "click", "doit (>=0.36.0)", "pydevtool"]

[[package]]
name = "seaborn"
version = "0.13.2"
description = "Statistical data visualization"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
matplotlib = ">=3.4,<3.6.1 || >3.6.1"
numpy = ">=1.20,<1.24.0 || >1.24.0"
pandas = ">=1.2"

[package.extras]
dev = ["pytest", "pytest-cov", "pytest-xdist", "flake8", "mypy", "pandas-stubs", "pre-commit", "flit"]
docs = ["numpydoc", "nbconvert", "ipykernel", "sphinx (<6.0.0)", "sphinx-copybutton", "sphinx-issues", "sphinx-design", "pyyaml", "pydata_sphinx_theme (==0.10.0rc2)"]
stats = ["scipy (>=1.7)", "statsmodels (>=0.12)"]

[[package]]
name = "sentencepiece"
version = "0.2.0"
description = "SentencePiece python wrapper"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "seqeval"
version = "1.2.2"
description = "Testing framework for sequence labeling"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = ">=1.14.0"
scikit-learn = ">=0.21.3"

[[package]]
name = "shellingham"
version = "1.5.4"
description = "Tool to Detect Surrounding Shell"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "smart-open"
version = "7.0.4"
description = "Utils for streaming large files (S3, HDFS, GCS, Azure Blob Storage, gzip, bz2...)"
category = "main"
optional = false
python-versions = "<4.0,>=3.7"

[package.dependencies]
wrapt = "*"

[package.extras]
all = ["boto3", "google-cloud-storage (>=2.6.0)", "azure-storage-blob", "azure-common", "azure-core", "requests", "paramiko", "zstandard"]
azure = ["azure-storage-blob", "azure-common", "azure-core"]
gcs = ["google-cloud-storage (>=2.6.0)"]
http = ["requests"]
s3 = ["boto3"]
ssh = ["paramiko"]
test = ["boto3", "google-cloud-storage (>=2.6.0)", "azure-storage-blob", "azure-common", "azure-core", "requests", "paramiko", "zstandard", "moto", "responses", "pytest", "pytest-rerunfailures"]
webhdfs = ["requests"]
zst = ["zstandard"]

[[package]]
name = "sniffio"
version = "1.3.1"
description = "Sniff out which async library your code is running under"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "soupsieve"
version = "2.6"
description = "A modern CSS selector implementation for Beautiful Soup."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "spacy"
version = "3.7.6"
description = "Industrial-strength Natural Language Processing (NLP) in Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
catalogue = ">=2.0.6,<2.1.0"
cymem = ">=2.0.2,<2.1.0"
jinja2 = "*"
langcodes = ">=3.2.0,<4.0.0"
murmurhash = ">=0.28.0,<1.1.0"
numpy = {version = ">=1.19.0", markers = "python_version >= \"3.9\""}
packaging = ">=20.0"
preshed = ">=3.0.2,<3.1.0"
pydantic = ">=1.7.4,<1.8 || >1.8,<1.8.1 || >1.8.1,<3.0.0"
requests = ">=2.13.0,<3.0.0"
spacy-legacy = ">=3.0.11,<3.1.0"
spacy-loggers = ">=1.0.0,<2.0.0"
srsly = ">=2.4.3,<3.0.0"
thinc = ">=8.2.2,<8.3.0"
tqdm = ">=4.38.0,<5.0.0"
typer = ">=0.3.0,<1.0.0"
wasabi = ">=0.9.1,<1.2.0"
weasel = ">=0.1.0,<0.5.0"

[package.extras]
apple = ["thinc-apple-ops (>=0.1.0.dev0,<1.0.0)"]
cuda = ["cupy (>=5.0.0b4,<13.0.0)"]
cuda-autodetect = ["cupy-wheel (>=11.0.0,<13.0.0)"]
cuda100 = ["cupy-cuda100 (>=5.0.0b4,<13.0.0)"]
cuda101 = ["cupy-cuda101 (>=5.0.0b4,<13.0.0)"]
cuda102 = ["cupy-cuda102 (>=5.0.0b4,<13.0.0)"]
cuda110 = ["cupy-cuda110 (>=5.0.0b4,<13.0.0)"]
cuda111 = ["cupy-cuda111 (>=5.0.0b4,<13.0.0)"]
cuda112 = ["cupy-cuda112 (>=5.0.0b4,<13.0.0)"]
cuda113 = ["cupy-cuda113 (>=5.0.0b4,<13.0.0)"]
cuda114 = ["cupy-cuda114 (>=5.0.0b4,<13.0.0)"]
cuda115 = ["cupy-cuda115 (>=5.0.0b4,<13.0.0)"]
cuda116 = ["cupy-cuda116 (>=5.0.0b4,<13.0.0)"]
cuda117 = ["cupy-cuda117 (>=5.0.0b4,<13.0.0)"]
cuda11x = ["cupy-cuda11x (>=11.0.0,<13.0.0)"]
cuda12x = ["cupy-cuda12x (>=11.5.0,<13.0.0)"]
cuda80 = ["cupy-cuda80 (>=5.0.0b4,<13.0.0)"]
cuda90 = ["cupy-cuda90 (>=5.0.0b4,<13.0.0)"]
cuda91 = ["cupy-cuda91 (>=5.0.0b4,<13.0.0)"]
cuda92 = ["cupy-cuda92 (>=5.0.0b4,<13.0.0)"]
ja = ["sudachipy (>=0.5.2,!=0.6.1)", "sudachidict-core (>=20211220)"]
ko = ["natto-py (>=0.9.0)"]
lookups = ["spacy-lookups-data (>=1.0.3,<1.1.0)"]
th = ["pythainlp (>=2.0)"]
transformers = ["spacy-transformers (>=1.1.2,<1.4.0)"]

[[package]]
name = "spacy-legacy"
version = "3.0.12"
description = "Legacy registered functions for spaCy backwards compatibility"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "spacy-loggers"
version = "1.0.5"
description = "Logging utilities for SpaCy"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "srsly"
version = "2.4.8"
description = "Modern high-performance serialization utilities for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
catalogue = ">=2.0.3,<2.1.0"

[[package]]
name = "stack-data"
version = "0.6.3"
description = "Extract data from python stack frames and tracebacks for informative displays"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
asttokens = ">=2.1.0"
executing = ">=1.2.0"
pure-eval = "*"

[package.extras]
tests = ["pytest", "typeguard", "pygments", "littleutils", "cython"]

[[package]]
name = "starlette"
version = "0.38.2"
description = "The little ASGI library that shines."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
anyio = ">=3.4.0,<5"
typing-extensions = {version = ">=3.10.0", markers = "python_version < \"3.10\""}

[package.extras]
full = ["httpx (>=0.22.0)", "itsdangerous", "jinja2", "python-multipart (>=0.0.7)", "pyyaml"]

[[package]]
name = "statsforecast"
version = "1.4.0"
description = "Time series forecasting suite using statistical models"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
matplotlib = "*"
numba = ">=0.55.0"
numpy = ">=1.21.6"
pandas = ">=1.3.5"
plotly = "*"
scipy = ">=1.7.3"
statsmodels = ">=0.13.2"
tqdm = "*"

[package.extras]
dev = ["nbdev", "black", "mypy", "flake8", "ray", "protobuf (>=3.15.3,<4.0.0)", "fugue (>=0.7.0)", "matplotlib", "neuralforecast", "pmdarima", "prophet", "sklearn", "dask"]
fugue = ["fugue[ray] (>=0.7.0)"]
ray = ["ray", "protobuf (>=3.15.3,<4.0.0)"]

[[package]]
name = "statsmodels"
version = "0.14.2"
description = "Statistical computations and models for Python"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
numpy = ">=1.22.3"
packaging = ">=21.3"
pandas = ">=1.4,<2.1.0 || >2.1.0"
patsy = ">=0.5.6"
scipy = ">=1.8,<1.9.2 || >1.9.2"

[package.extras]
build = ["cython (>=0.29.33)"]
develop = ["cython (>=0.29.33)", "cython (>=3.0.10,<4)", "setuptools-scm[toml] (>=8.0,<9.0)", "matplotlib (>=3)", "colorama", "joblib", "pytest (>=7.3.0,<8)", "pytest-randomly", "pytest-xdist", "pytest-cov", "flake8", "isort", "pywinpty"]
docs = ["sphinx", "nbconvert", "jupyter-client", "ipykernel", "matplotlib", "nbformat", "numpydoc", "pandas-datareader"]

[[package]]
name = "sympy"
version = "1.13.2"
description = "Computer algebra system (CAS) in Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
mpmath = ">=1.1.0,<1.4"

[package.extras]
dev = ["pytest (>=7.1.0)", "hypothesis (>=6.70.0)"]

[[package]]
name = "tabulate"
version = "0.9.0"
description = "Pretty-print tabular data"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
widechars = ["wcwidth"]

[[package]]
name = "tbb"
version = "2021.13.1"
description = "Intel® oneAPI Threading Building Blocks (oneTBB)"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "tenacity"
version = "9.0.0"
description = "Retry code until it succeeds"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
doc = ["reno", "sphinx"]
test = ["pytest", "tornado (>=4.5)", "typeguard"]

[[package]]
name = "tensorboard"
version = "2.17.1"
description = "TensorBoard lets you watch Tensors Flow"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
absl-py = ">=0.4"
grpcio = ">=1.48.2"
markdown = ">=2.6.8"
numpy = ">=1.12.0"
packaging = "*"
protobuf = ">=3.19.6,<4.24.0 || >4.24.0"
six = ">1.9"
tensorboard-data-server = ">=0.7.0,<0.8.0"
werkzeug = ">=1.0.1"

[[package]]
name = "tensorboard-data-server"
version = "0.7.2"
description = "Fast data loading for TensorBoard"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "tensorboardx"
version = "2.6.2.2"
description = "TensorBoardX lets you watch Tensors Flow without Tensorflow"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = "*"
packaging = "*"
protobuf = ">=3.20"

[[package]]
name = "text-unidecode"
version = "1.3"
description = "The most basic Text::Unidecode port"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "thinc"
version = "8.2.5"
description = "A refreshing functional take on deep learning, compatible with your favorite libraries"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
blis = ">=0.7.8,<0.8.0"
catalogue = ">=2.0.4,<2.1.0"
confection = ">=0.0.1,<1.0.0"
cymem = ">=2.0.2,<2.1.0"
murmurhash = ">=1.0.2,<1.1.0"
numpy = {version = ">=1.19.0,<2.0.0", markers = "python_version >= \"3.9\""}
packaging = ">=20.0"
preshed = ">=3.0.2,<3.1.0"
pydantic = ">=1.7.4,<1.8 || >1.8,<1.8.1 || >1.8.1,<3.0.0"
srsly = ">=2.4.0,<3.0.0"
wasabi = ">=0.8.1,<1.2.0"

[package.extras]
cuda = ["cupy (>=5.0.0b4)"]
cuda-autodetect = ["cupy-wheel (>=11.0.0)"]
cuda100 = ["cupy-cuda100 (>=5.0.0b4)"]
cuda101 = ["cupy-cuda101 (>=5.0.0b4)"]
cuda102 = ["cupy-cuda102 (>=5.0.0b4)"]
cuda110 = ["cupy-cuda110 (>=5.0.0b4)"]
cuda111 = ["cupy-cuda111 (>=5.0.0b4)"]
cuda112 = ["cupy-cuda112 (>=5.0.0b4)"]
cuda113 = ["cupy-cuda113 (>=5.0.0b4)"]
cuda114 = ["cupy-cuda114 (>=5.0.0b4)"]
cuda115 = ["cupy-cuda115 (>=5.0.0b4)"]
cuda116 = ["cupy-cuda116 (>=5.0.0b4)"]
cuda117 = ["cupy-cuda117 (>=5.0.0b4)"]
cuda11x = ["cupy-cuda11x (>=11.0.0)"]
cuda12x = ["cupy-cuda12x (>=11.5.0)"]
cuda80 = ["cupy-cuda80 (>=5.0.0b4)"]
cuda90 = ["cupy-cuda90 (>=5.0.0b4)"]
cuda91 = ["cupy-cuda91 (>=5.0.0b4)"]
cuda92 = ["cupy-cuda92 (>=5.0.0b4)"]
datasets = ["ml-datasets (>=0.2.0,<0.3.0)"]
mxnet = ["mxnet (>=1.5.1,<1.6.0)"]
tensorflow = ["tensorflow (>=2.0.0,<2.6.0)"]
torch = ["torch (>=1.6.0)"]

[[package]]
name = "threadpoolctl"
version = "3.5.0"
description = "threadpoolctl"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "tifffile"
version = "2024.8.24"
description = "Read and write TIFF files"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
numpy = "*"

[package.extras]
all = ["imagecodecs (>=2023.8.12)", "matplotlib", "defusedxml", "lxml", "zarr", "fsspec"]
codecs = ["imagecodecs (>=2023.8.12)"]
plot = ["matplotlib"]
test = ["pytest", "imagecodecs", "czifile", "cmapfile", "oiffile", "lfdfiles", "psdtags", "roifile", "lxml", "zarr", "dask", "xarray", "fsspec", "defusedxml", "ndtiff"]
xml = ["defusedxml", "lxml"]
zarr = ["zarr", "fsspec"]

[[package]]
name = "timm"
version = "0.9.16"
description = "PyTorch Image Models"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
huggingface_hub = "*"
pyyaml = "*"
safetensors = "*"
torch = "*"
torchvision = "*"

[[package]]
name = "tokenizers"
version = "0.19.1"
description = ""
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
huggingface-hub = ">=0.16.4,<1.0"

[package.extras]
testing = ["pytest", "requests", "numpy", "datasets", "black (==22.3)", "ruff"]
docs = ["sphinx", "sphinx-rtd-theme", "setuptools-rust"]
dev = ["tokenizers"]

[[package]]
name = "toolz"
version = "0.12.1"
description = "List processing tools and functional utilities"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "torch"
version = "2.3.1"
description = "Tensors and Dynamic neural networks in Python with strong GPU acceleration"
category = "main"
optional = false
python-versions = ">=3.8.0"

[package.dependencies]
filelock = "*"
fsspec = "*"
jinja2 = "*"
mkl = {version = ">=2021.1.1,<=2021.4.0", markers = "platform_system == \"Windows\""}
networkx = "*"
nvidia-cublas-cu12 = {version = "12.1.3.1", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cuda-cupti-cu12 = {version = "12.1.105", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cuda-nvrtc-cu12 = {version = "12.1.105", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cuda-runtime-cu12 = {version = "12.1.105", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cudnn-cu12 = {version = "8.9.2.26", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cufft-cu12 = {version = "11.0.2.54", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-curand-cu12 = {version = "10.3.2.106", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cusolver-cu12 = {version = "11.4.5.107", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cusparse-cu12 = {version = "12.1.0.106", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-nccl-cu12 = {version = "2.20.5", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-nvtx-cu12 = {version = "12.1.105", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
sympy = "*"
triton = {version = "2.3.1", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\" and python_version < \"3.12\""}
typing-extensions = ">=4.8.0"

[package.extras]
opt-einsum = ["opt-einsum (>=3.3)"]
optree = ["optree (>=0.9.1)"]

[[package]]
name = "torchmetrics"
version = "1.2.1"
description = "PyTorch native Metrics"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
lightning-utilities = ">=0.8.0"
numpy = ">1.20.0"
packaging = ">17.1"
torch = ">=1.8.1"

[package.extras]
_tests = ["pytorch-msssim (==1.0.0)", "kornia (>=0.6.7)", "jiwer (>=2.3.0)", "scipy (>1.0.0)", "pandas (>1.0.0)", "lpips (<=0.1.4)", "mir-eval (>=0.6)", "torch-complex (<=0.4.3)", "bert-score (==0.3.13)", "scikit-image (>=0.19.0)", "netcal (>1.0.0)", "dython (<=0.7.4)", "rouge-score (>0.1.0)", "pandas (>=1.4.0)", "statsmodels (>0.13.5)", "numpy (<1.25.0)", "sacrebleu (>=2.0.0)", "fairlearn", "sewar (>=0.4.4)", "fast-bss-eval (>=0.1.0)", "faster-coco-eval (>=1.3.3)", "huggingface-hub (<0.20)"]
all = ["pystoi (>=0.3.0)", "torchaudio (>=0.10.0)", "pycocotools (>2.0.0)", "torchvision (>=0.8)", "torch-fidelity (<=0.4.0)", "scipy (>1.0.0)", "transformers (>=4.10.0)", "piq (<=0.8.0)", "regex (>=2021.9.24)", "nltk (>=3.6)", "tqdm (>=4.41.0)", "transformers (>4.4.0)", "types-requests", "types-six", "types-tabulate", "types-pyyaml", "types-setuptools", "types-protobuf", "mypy (==1.7.1)", "types-emoji", "torch (==2.1.1)", "matplotlib (>=3.2.0)", "SciencePlots (>=2.0.0)"]
audio = ["pystoi (>=0.3.0)", "torchaudio (>=0.10.0)"]
detection = ["pycocotools (>2.0.0)", "torchvision (>=0.8)"]
dev = ["pystoi (>=0.3.0)", "torchaudio (>=0.10.0)", "pycocotools (>2.0.0)", "torchvision (>=0.8)", "torch-fidelity (<=0.4.0)", "scipy (>1.0.0)", "transformers (>=4.10.0)", "piq (<=0.8.0)", "regex (>=2021.9.24)", "nltk (>=3.6)", "tqdm (>=4.41.0)", "transformers (>4.4.0)", "types-requests", "types-six", "types-tabulate", "types-pyyaml", "types-setuptools", "types-protobuf", "mypy (==1.7.1)", "types-emoji", "torch (==2.1.1)", "matplotlib (>=3.2.0)", "SciencePlots (>=2.0.0)", "pytorch-msssim (==1.0.0)", "kornia (>=0.6.7)", "jiwer (>=2.3.0)", "pandas (>1.0.0)", "lpips (<=0.1.4)", "mir-eval (>=0.6)", "torch-complex (<=0.4.3)", "bert-score (==0.3.13)", "scikit-image (>=0.19.0)", "netcal (>1.0.0)", "dython (<=0.7.4)", "rouge-score (>0.1.0)", "pandas (>=1.4.0)", "statsmodels (>0.13.5)", "numpy (<1.25.0)", "sacrebleu (>=2.0.0)", "fairlearn", "sewar (>=0.4.4)", "fast-bss-eval (>=0.1.0)", "faster-coco-eval (>=1.3.3)", "huggingface-hub (<0.20)"]
image = ["torch-fidelity (<=0.4.0)", "scipy (>1.0.0)", "torchvision (>=0.8)"]
multimodal = ["transformers (>=4.10.0)", "piq (<=0.8.0)"]
text = ["regex (>=2021.9.24)", "nltk (>=3.6)", "tqdm (>=4.41.0)", "transformers (>4.4.0)"]
typing = ["types-requests", "types-six", "types-tabulate", "types-pyyaml", "types-setuptools", "types-protobuf", "mypy (==1.7.1)", "types-emoji", "torch (==2.1.1)"]
visual = ["matplotlib (>=3.2.0)", "SciencePlots (>=2.0.0)"]

[[package]]
name = "torchvision"
version = "0.18.1"
description = "image and video datasets and models for torch deep learning"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = "*"
pillow = ">=5.3.0,<8.3.0 || >=8.4.0"
torch = "2.3.1"

[package.extras]
scipy = ["scipy"]

[[package]]
name = "tornado"
version = "6.4.1"
description = "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed."
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "tqdm"
version = "4.66.5"
description = "Fast, Extensible Progress Meter"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
dev = ["pytest (>=6)", "pytest-cov", "pytest-timeout", "pytest-xdist"]
notebook = ["ipywidgets (>=6)"]
slack = ["slack-sdk"]
telegram = ["requests"]

[[package]]
name = "traitlets"
version = "5.14.3"
description = "Traitlets Python configuration system"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["myst-parser", "pydata-sphinx-theme", "sphinx"]
test = ["argcomplete (>=3.0.3)", "mypy (>=1.7.0)", "pre-commit", "pytest-mock", "pytest-mypy-testing", "pytest (>=7.0,<8.2)"]

[[package]]
name = "transformers"
version = "4.40.2"
description = "State-of-the-art Machine Learning for JAX, PyTorch and TensorFlow"
category = "main"
optional = false
python-versions = ">=3.8.0"

[package.dependencies]
filelock = "*"
huggingface-hub = ">=0.19.3,<1.0"
numpy = ">=1.17"
packaging = ">=20.0"
protobuf = {version = "*", optional = true, markers = "extra == \"sentencepiece\""}
pyyaml = ">=5.1"
regex = "!=2019.12.17"
requests = "*"
safetensors = ">=0.4.1"
sentencepiece = {version = ">=0.1.91,<0.1.92 || >0.1.92", optional = true, markers = "extra == \"sentencepiece\""}
tokenizers = ">=0.19,<0.20"
tqdm = ">=4.27"

[package.extras]
accelerate = ["accelerate (>=0.21.0)"]
agents = ["diffusers", "accelerate (>=0.21.0)", "datasets (!=2.5.0)", "torch", "sentencepiece (>=0.1.91,!=0.1.92)", "opencv-python", "Pillow (>=10.0.1,<=15.0)"]
all = ["tensorflow (>=2.6,<2.16)", "onnxconverter-common", "tf2onnx", "tensorflow-text (<2.16)", "keras-nlp (>=0.3.1)", "torch", "accelerate (>=0.21.0)", "jax (>=0.4.1,<=0.4.13)", "jaxlib (>=0.4.1,<=0.4.13)", "flax (>=0.4.1,<=0.7.0)", "optax (>=0.0.8,<=0.1.4)", "sentencepiece (>=0.1.91,!=0.1.92)", "protobuf", "tokenizers (>=0.19,<0.20)", "torchaudio", "librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm", "Pillow (>=10.0.1,<=15.0)", "optuna", "ray[tune] (>=2.7.0)", "sigopt", "timm", "torchvision", "codecarbon (==1.2.0)", "decord (==0.6.0)", "av (==9.2.0)"]
audio = ["librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm"]
codecarbon = ["codecarbon (==1.2.0)"]
deepspeed = ["deepspeed (>=0.9.3)", "accelerate (>=0.21.0)"]
deepspeed-testing = ["deepspeed (>=0.9.3)", "accelerate (>=0.21.0)", "pytest (>=7.2.0,<8.0.0)", "pytest-xdist", "timeout-decorator", "parameterized", "psutil", "datasets (!=2.5.0)", "dill (<0.3.5)", "evaluate (>=0.2.0)", "pytest-timeout", "ruff (==0.1.5)", "sacrebleu (>=1.4.12,<2.0.0)", "rouge-score (!=0.0.7,!=0.0.8,!=0.1,!=0.1.1)", "nltk", "GitPython (<3.1.19)", "hf-doc-builder (>=0.3.0)", "protobuf", "sacremoses", "rjieba", "beautifulsoup4", "tensorboard", "pydantic", "sentencepiece (>=0.1.91,!=0.1.92)", "faiss-cpu", "cookiecutter (==1.7.3)", "optuna"]
dev = ["tensorflow (>=2.6,<2.16)", "onnxconverter-common", "tf2onnx", "tensorflow-text (<2.16)", "keras-nlp (>=0.3.1)", "torch", "accelerate (>=0.21.0)", "jax (>=0.4.1,<=0.4.13)", "jaxlib (>=0.4.1,<=0.4.13)", "flax (>=0.4.1,<=0.7.0)", "optax (>=0.0.8,<=0.1.4)", "sentencepiece (>=0.1.91,!=0.1.92)", "protobuf", "tokenizers (>=0.19,<0.20)", "torchaudio", "librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm", "Pillow (>=10.0.1,<=15.0)", "optuna", "ray[tune] (>=2.7.0)", "sigopt", "timm", "torchvision", "codecarbon (==1.2.0)", "decord (==0.6.0)", "av (==9.2.0)", "pytest (>=7.2.0,<8.0.0)", "pytest-xdist", "timeout-decorator", "parameterized", "psutil", "datasets (!=2.5.0)", "dill (<0.3.5)", "evaluate (>=0.2.0)", "pytest-timeout", "ruff (==0.1.5)", "sacrebleu (>=1.4.12,<2.0.0)", "rouge-score (!=0.0.7,!=0.0.8,!=0.1,!=0.1.1)", "nltk", "GitPython (<3.1.19)", "hf-doc-builder (>=0.3.0)", "sacremoses", "rjieba", "beautifulsoup4", "tensorboard", "pydantic", "faiss-cpu", "cookiecutter (==1.7.3)", "isort (>=5.5.4)", "urllib3 (<2.0.0)", "fugashi (>=1.0)", "ipadic (>=1.0.0,<2.0)", "unidic-lite (>=1.0.7)", "unidic (>=1.0.2)", "sudachipy (>=0.6.6)", "sudachidict-core (>=20220729)", "rhoknp (>=1.1.0,<1.3.1)", "hf-doc-builder", "scikit-learn"]
dev-tensorflow = ["pytest (>=7.2.0,<8.0.0)", "pytest-xdist", "timeout-decorator", "parameterized", "psutil", "datasets (!=2.5.0)", "dill (<0.3.5)", "evaluate (>=0.2.0)", "pytest-timeout", "ruff (==0.1.5)", "sacrebleu (>=1.4.12,<2.0.0)", "rouge-score (!=0.0.7,!=0.0.8,!=0.1,!=0.1.1)", "nltk", "GitPython (<3.1.19)", "hf-doc-builder (>=0.3.0)", "protobuf", "sacremoses", "rjieba", "beautifulsoup4", "tensorboard", "pydantic", "sentencepiece (>=0.1.91,!=0.1.92)", "faiss-cpu", "cookiecutter (==1.7.3)", "tensorflow (>=2.6,<2.16)", "onnxconverter-common", "tf2onnx", "tensorflow-text (<2.16)", "keras-nlp (>=0.3.1)", "tokenizers (>=0.19,<0.20)", "Pillow (>=10.0.1,<=15.0)", "isort (>=5.5.4)", "urllib3 (<2.0.0)", "hf-doc-builder", "scikit-learn", "onnxruntime (>=1.4.0)", "onnxruntime-tools (>=1.4.2)", "librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm"]
dev-torch = ["pytest (>=7.2.0,<8.0.0)", "pytest-xdist", "timeout-decorator", "parameterized", "psutil", "datasets (!=2.5.0)", "dill (<0.3.5)", "evaluate (>=0.2.0)", "pytest-timeout", "ruff (==0.1.5)", "sacrebleu (>=1.4.12,<2.0.0)", "rouge-score (!=0.0.7,!=0.0.8,!=0.1,!=0.1.1)", "nltk", "GitPython (<3.1.19)", "hf-doc-builder (>=0.3.0)", "protobuf", "sacremoses", "rjieba", "beautifulsoup4", "tensorboard", "pydantic", "sentencepiece (>=0.1.91,!=0.1.92)", "faiss-cpu", "cookiecutter (==1.7.3)", "torch", "accelerate (>=0.21.0)", "tokenizers (>=0.19,<0.20)", "torchaudio", "librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm", "Pillow (>=10.0.1,<=15.0)", "optuna", "ray[tune] (>=2.7.0)", "sigopt", "timm", "torchvision", "codecarbon (==1.2.0)", "isort (>=5.5.4)", "urllib3 (<2.0.0)", "fugashi (>=1.0)", "ipadic (>=1.0.0,<2.0)", "unidic-lite (>=1.0.7)", "unidic (>=1.0.2)", "sudachipy (>=0.6.6)", "sudachidict-core (>=20220729)", "rhoknp (>=1.1.0,<1.3.1)", "hf-doc-builder", "scikit-learn", "onnxruntime (>=1.4.0)", "onnxruntime-tools (>=1.4.2)"]
docs = ["tensorflow (>=2.6,<2.16)", "onnxconverter-common", "tf2onnx", "tensorflow-text (<2.16)", "keras-nlp (>=0.3.1)", "torch", "accelerate (>=0.21.0)", "jax (>=0.4.1,<=0.4.13)", "jaxlib (>=0.4.1,<=0.4.13)", "flax (>=0.4.1,<=0.7.0)", "optax (>=0.0.8,<=0.1.4)", "sentencepiece (>=0.1.91,!=0.1.92)", "protobuf", "tokenizers (>=0.19,<0.20)", "torchaudio", "librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm", "Pillow (>=10.0.1,<=15.0)", "optuna", "ray[tune] (>=2.7.0)", "sigopt", "timm", "torchvision", "codecarbon (==1.2.0)", "decord (==0.6.0)", "av (==9.2.0)", "hf-doc-builder"]
docs-specific = ["hf-doc-builder"]
flax = ["jax (>=0.4.1,<=0.4.13)", "jaxlib (>=0.4.1,<=0.4.13)", "flax (>=0.4.1,<=0.7.0)", "optax (>=0.0.8,<=0.1.4)"]
flax-speech = ["librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm"]
ftfy = ["ftfy"]
integrations = ["optuna", "ray[tune] (>=2.7.0)", "sigopt"]
ja = ["fugashi (>=1.0)", "ipadic (>=1.0.0,<2.0)", "unidic-lite (>=1.0.7)", "unidic (>=1.0.2)", "sudachipy (>=0.6.6)", "sudachidict-core (>=20220729)", "rhoknp (>=1.1.0,<1.3.1)"]
modelcreation = ["cookiecutter (==1.7.3)"]
natten = ["natten (>=0.14.6,<0.15.0)"]
onnx = ["onnxconverter-common", "tf2onnx", "onnxruntime (>=1.4.0)", "onnxruntime-tools (>=1.4.2)"]
onnxruntime = ["onnxruntime (>=1.4.0)", "onnxruntime-tools (>=1.4.2)"]
optuna = ["optuna"]
quality = ["datasets (!=2.5.0)", "isort (>=5.5.4)", "ruff (==0.1.5)", "GitPython (<3.1.19)", "hf-doc-builder (>=0.3.0)", "urllib3 (<2.0.0)"]
ray = ["ray[tune] (>=2.7.0)"]
retrieval = ["faiss-cpu", "datasets (!=2.5.0)"]
sagemaker = ["sagemaker (>=2.31.0)"]
sentencepiece = ["sentencepiece (>=0.1.91,!=0.1.92)", "protobuf"]
serving = ["pydantic", "uvicorn", "fastapi", "starlette"]
sigopt = ["sigopt"]
sklearn = ["scikit-learn"]
speech = ["torchaudio", "librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm"]
testing = ["pytest (>=7.2.0,<8.0.0)", "pytest-xdist", "timeout-decorator", "parameterized", "psutil", "datasets (!=2.5.0)", "dill (<0.3.5)", "evaluate (>=0.2.0)", "pytest-timeout", "ruff (==0.1.5)", "sacrebleu (>=1.4.12,<2.0.0)", "rouge-score (!=0.0.7,!=0.0.8,!=0.1,!=0.1.1)", "nltk", "GitPython (<3.1.19)", "hf-doc-builder (>=0.3.0)", "protobuf", "sacremoses", "rjieba", "beautifulsoup4", "tensorboard", "pydantic", "sentencepiece (>=0.1.91,!=0.1.92)", "faiss-cpu", "cookiecutter (==1.7.3)"]
tf = ["tensorflow (>=2.6,<2.16)", "onnxconverter-common", "tf2onnx", "tensorflow-text (<2.16)", "keras-nlp (>=0.3.1)"]
tf-cpu = ["tensorflow-cpu (>=2.6,<2.16)", "onnxconverter-common", "tf2onnx", "tensorflow-text (<2.16)", "keras-nlp (>=0.3.1)"]
tf-speech = ["librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm"]
timm = ["timm"]
tokenizers = ["tokenizers (>=0.19,<0.20)"]
torch = ["torch", "accelerate (>=0.21.0)"]
torch-speech = ["torchaudio", "librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm"]
torch-vision = ["torchvision", "Pillow (>=10.0.1,<=15.0)"]
torchhub = ["filelock", "huggingface-hub (>=0.19.3,<1.0)", "importlib-metadata", "numpy (>=1.17)", "packaging (>=20.0)", "protobuf", "regex (!=2019.12.17)", "requests", "sentencepiece (>=0.1.91,!=0.1.92)", "torch", "tokenizers (>=0.19,<0.20)", "tqdm (>=4.27)"]
video = ["decord (==0.6.0)", "av (==9.2.0)"]
vision = ["Pillow (>=10.0.1,<=15.0)"]

[[package]]
name = "triton"
version = "2.3.1"
description = "A language and compiler for custom Deep Learning operations"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
filelock = "*"

[package.extras]
build = ["cmake (>=3.20)", "lit"]
tests = ["autopep8", "flake8", "isort", "numpy", "pytest", "scipy (>=1.7.1)", "torch"]
tutorials = ["matplotlib", "pandas", "tabulate", "torch"]

[[package]]
name = "typer"
version = "0.12.5"
description = "Typer, build great CLIs. Easy to code. Based on Python type hints."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
click = ">=8.0.0"
rich = ">=10.11.0"
shellingham = ">=1.3.0"
typing-extensions = ">=3.7.4.3"

[[package]]
name = "typing-extensions"
version = "4.12.2"
description = "Backported and Experimental Type Hints for Python 3.8+"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "tzdata"
version = "2024.1"
description = "Provider of IANA time zone data"
category = "main"
optional = false
python-versions = ">=2"

[[package]]
name = "urllib3"
version = "1.26.20"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7"

[package.extras]
brotli = ["brotlicffi (>=0.8.0)", "brotli (==1.0.9)", "brotlipy (>=0.6.0)", "brotli (>=1.0.9)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "urllib3-secure-extra", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "urllib3"
version = "2.2.2"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
brotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]
h2 = ["h2 (>=4,<5)"]
socks = ["pysocks (>=1.5.6,!=1.5.7,<2.0)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "utilsforecast"
version = "0.0.10"
description = "Forecasting utilities"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = "*"
pandas = ">=1.1.1"

[package.extras]
dev = ["matplotlib", "numba", "plotly", "polars", "pyarrow"]
plotting = ["matplotlib", "plotly", "plotly-resampler"]

[[package]]
name = "uvicorn"
version = "0.30.6"
description = "The lightning-fast ASGI server."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
click = ">=7.0"
h11 = ">=0.8"
typing-extensions = {version = ">=4.0", markers = "python_version < \"3.11\""}

[package.extras]
standard = ["colorama (>=0.4)", "httptools (>=0.5.0)", "python-dotenv (>=0.13)", "pyyaml (>=5.1)", "uvloop (>=0.14.0,!=0.15.0,!=0.15.1)", "watchfiles (>=0.13)", "websockets (>=10.4)"]

[[package]]
name = "virtualenv"
version = "20.26.3"
description = "Virtual Python Environment builder"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
distlib = ">=0.3.7,<1"
filelock = ">=3.12.2,<4"
platformdirs = ">=3.9.1,<5"

[package.extras]
docs = ["furo (>=2023.7.26)", "proselint (>=0.13)", "sphinx (>=7.1.2,!=7.3)", "sphinx-argparse (>=0.4)", "sphinxcontrib-towncrier (>=0.2.1a0)", "towncrier (>=23.6)"]
test = ["covdefaults (>=2.3)", "coverage-enable-subprocess (>=1)", "coverage (>=7.2.7)", "flaky (>=3.7)", "packaging (>=23.1)", "pytest-env (>=0.8.2)", "pytest-freezer (>=0.4.8)", "pytest-mock (>=3.11.1)", "pytest-randomly (>=3.12)", "pytest-timeout (>=2.1)", "pytest (>=7.4)", "setuptools (>=68)", "time-machine (>=2.10)"]

[[package]]
name = "wasabi"
version = "1.1.3"
description = "A lightweight console printing and formatting toolkit"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
colorama = {version = ">=0.4.6", markers = "sys_platform == \"win32\" and python_version >= \"3.7\""}

[[package]]
name = "wcwidth"
version = "0.2.13"
description = "Measures the displayed width of unicode strings in a terminal"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "weasel"
version = "0.4.1"
description = "Weasel: A small and easy workflow system"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cloudpathlib = ">=0.7.0,<1.0.0"
confection = ">=0.0.4,<0.2.0"
packaging = ">=20.0"
pydantic = ">=1.7.4,<1.8 || >1.8,<1.8.1 || >1.8.1,<3.0.0"
requests = ">=2.13.0,<3.0.0"
smart-open = ">=5.2.1,<8.0.0"
srsly = ">=2.4.3,<3.0.0"
typer = ">=0.3.0,<1.0.0"
wasabi = ">=0.9.1,<1.2.0"

[[package]]
name = "werkzeug"
version = "3.0.4"
description = "The comprehensive WSGI web application library."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
MarkupSafe = ">=2.1.1"

[package.extras]
watchdog = ["watchdog (>=2.3)"]

[[package]]
name = "win32-setctime"
version = "1.1.0"
description = "A small Python utility to set file creation time on Windows"
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
dev = ["pytest (>=4.6.2)", "black (>=19.3b0)"]

[[package]]
name = "window-ops"
version = "0.0.15"
description = "Implementations of window operations such as rolling and expanding."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
numba = "*"
numpy = "*"

[package.extras]
dev = ["pandas"]

[[package]]
name = "wrapt"
version = "1.16.0"
description = "Module for decorators, wrappers and monkey patching."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "xgboost"
version = "2.0.3"
description = "XGBoost Python Package"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = "*"
scipy = "*"

[package.extras]
dask = ["dask", "distributed", "pandas"]
datatable = ["datatable"]
pandas = ["pandas"]
plotting = ["graphviz", "matplotlib"]
pyspark = ["cloudpickle", "pyspark", "scikit-learn"]
scikit-learn = ["scikit-learn"]

[[package]]
name = "xxhash"
version = "3.5.0"
description = "Python binding for xxHash"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "yarl"
version = "1.9.4"
description = "Yet another URL library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
idna = ">=2.0"
multidict = ">=4.0"

[[package]]
name = "zipp"
version = "3.20.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
doc = ["sphinx (>=3.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
test = ["pytest (>=6,<8.1.0 || >=8.2.0)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-mypy", "pytest-enabler (>=2.2)", "jaraco.itertools", "jaraco.functools", "more-itertools", "big-o", "pytest-ignore-flaky", "jaraco.test", "importlib-resources", "pytest-ruff (>=0.2.1)"]

[metadata]
lock-version = "1.1"
python-versions = ">=3.9,<3.12"
content-hash = "0cd0a4af35d857be40940e6a4d6ffe4c9c987fcec93da1eac3e92364203236dc"

[metadata.files]
absl-py = []
accelerate = []
aiohappyeyeballs = []
aiohttp = []
aiohttp-cors = []
aiosignal = []
annotated-types = []
antlr4-python3-runtime = []
anyio = []
appnope = []
asttokens = []
async-timeout = []
attrs = []
autogluon = []
"autogluon.common" = []
"autogluon.core" = []
"autogluon.features" = []
"autogluon.multimodal" = []
"autogluon.tabular" = []
"autogluon.timeseries" = []
beautifulsoup4 = []
blis = []
boto3 = []
botocore = []
cachetools = []
catalogue = []
catboost = []
certifi = []
cffi = []
charset-normalizer = []
click = []
cloudpathlib = []
cloudpickle = []
colorama = []
coloredlogs = []
colorful = []
comm = []
confection = []
contourpy = []
cycler = []
cymem = []
datasets = []
debugpy = []
decorator = []
defusedxml = []
dill = []
distlib = []
evaluate = []
exceptiongroup = []
executing = []
fastai = []
fastapi = []
fastcore = []
fastdownload = []
fastprogress = []
filelock = []
flatbuffers = []
fonttools = []
frozenlist = []
fsspec = []
future = []
gdown = []
gluonts = []
google-api-core = []
google-auth = []
googleapis-common-protos = []
graphviz = []
grpcio = []
h11 = []
huggingface-hub = []
humanfriendly = []
hyperopt = []
idna = []
imageio = []
importlib-metadata = []
importlib-resources = []
intel-openmp = []
ipykernel = []
ipython = []
jedi = []
jinja2 = []
jmespath = []
joblib = []
jsonschema = []
jsonschema-specifications = []
jupyter-client = []
jupyter-core = []
kiwisolver = []
langcodes = []
language-data = []
lazy-loader = []
lightgbm = []
lightning = []
lightning-utilities = []
llvmlite = []
loguru = []
mangum = []
marisa-trie = []
markdown = []
markdown-it-py = []
markupsafe = []
matplotlib = []
matplotlib-inline = []
mdurl = []
mkl = []
mlforecast = []
model-index = []
mpmath = []
msgpack = []
multidict = []
multiprocess = []
murmurhash = []
nest-asyncio = []
networkx = []
nlpaug = []
nltk = []
nptyping = []
numba = []
numpy = []
nvidia-cublas-cu12 = []
nvidia-cuda-cupti-cu12 = []
nvidia-cuda-nvrtc-cu12 = []
nvidia-cuda-runtime-cu12 = []
nvidia-cudnn-cu12 = []
nvidia-cufft-cu12 = []
nvidia-curand-cu12 = []
nvidia-cusolver-cu12 = []
nvidia-cusparse-cu12 = []
nvidia-ml-py3 = []
nvidia-nccl-cu12 = []
nvidia-nvjitlink-cu12 = []
nvidia-nvtx-cu12 = []
omegaconf = []
onnx = []
onnxruntime = []
opencensus = []
opencensus-context = []
opendatalab = []
openmim = []
openxlab = []
optimum = []
ordered-set = []
orjson = []
packaging = []
pandas = []
parso = []
patsy = []
pdf2image = []
pexpect = []
pillow = []
platformdirs = []
plotly = []
preshed = []
prometheus-client = []
prompt-toolkit = []
proto-plus = []
protobuf = []
psutil = []
ptyprocess = []
pure-eval = []
py-spy = []
py4j = []
pyarrow = []
pyasn1 = []
pyasn1-modules = []
pycparser = []
pycryptodome = []
pydantic = []
pydantic-core = []
pygments = []
pyparsing = []
pyreadline3 = []
pysocks = []
pytesseract = []
python-dateutil = []
python-dotenv = []
pytorch-lightning = []
pytorch-metric-learning = []
pytz = []
pywavelets = []
pywin32 = []
pyyaml = []
pyzmq = []
ray = []
referencing = []
regex = []
requests = []
rich = []
rpds-py = []
rsa = []
s3transfer = []
safetensors = []
scikit-image = []
scikit-learn = []
scipy = []
seaborn = []
sentencepiece = []
seqeval = []
shellingham = []
six = []
smart-open = []
sniffio = []
soupsieve = []
spacy = []
spacy-legacy = []
spacy-loggers = []
srsly = []
stack-data = []
starlette = []
statsforecast = []
statsmodels = []
sympy = []
tabulate = []
tbb = []
tenacity = []
tensorboard = []
tensorboard-data-server = []
tensorboardx = []
text-unidecode = []
thinc = []
threadpoolctl = []
tifffile = []
timm = []
tokenizers = []
toolz = []
torch = []
torchmetrics = []
torchvision = []
tornado = []
tqdm = []
traitlets = []
transformers = []
triton = []
typer = []
typing-extensions = []
tzdata = []
urllib3 = []
utilsforecast = []
uvicorn = []
virtualenv = []
wasabi = []
wcwidth = []
weasel = []
werkzeug = []
win32-setctime = []
window-ops = []
wrapt = []
xgboost = []
xxhash = []
yarl = []
zipp = []
